swagger: '2.0'
info:
  title: Catalog Service
  version: '1.0'
  contact:
    name: Shopgate API
    url: https://shopagte.com
    email: support@shopgate.com
  description: |
    Check out the [Catalog Integration Guide](/docs/retail-red/ZG9jOjM1NjU0Nzcw-integration-overview) or start with [creating a product](/docs/retail-red/b3A6MzU2NTUwNDQ-create-products).
host: catalog.shopgate.io
schemes:
  - https
basePath: /v1
produces:
  - application/json
consumes:
  - application/json
paths:
  /merchants/{merchantCode}/parentCatalogs:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    post:
      tags:
        - ParentCatalogs
      operationId: createParentCatalogs
      summary: Create new parent catalogs
      description: Create new parent catalogs
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - parentCatalogs
            properties:
              parentCatalogs:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/ParentCatalogCreate'
          x-examples:
            createParentCatalogs:
              parentCatalogs:
                - code: parentCatalog1
                  defaultCurrencyCode: USD
                  defaultLocaleCode: en-us
                  isDefault: true
                  name: Parent Catalog 1
      responses:
        200:
          description: Parent catalogs created
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/catalogs:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      tags: ['Catalogs']
      operationId: getCatalogs
      summary: Get catalogs
      description: Get catalogs
      parameters:
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      responses:
        200:
          description: Returns catalogs
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              catalogs:
                type: array
                items:
                  $ref: '#/definitions/CatalogBase'
          examples:
            getCatalogs:
              meta:
                limit: 10
                offset: 0
                totalItemCount: 1
              catalogs:
                - code: defaultCatalog
                  name: Default Catalog
                  defaultLocaleCode: en-us
                  defaultCurrencyCode: USD
                  externalUpdateDate: "2018-12-15T00:00:23.114Z"
                  parentCatalogCode: parentCatalog1
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags: ['Catalogs']
      operationId: createCatalogs
      summary: Create catalogs
      description: Create catalogs
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - catalogs
            properties:
              catalogs:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/CatalogCreate'
          x-examples:
            createCatalogs:
              catalogs:
                - code: defaultCatalog
                  name: Default Catalog
                  defaultLocaleCode: en-us
                  defaultCurrencyCode: USD
                  externalUpdateDate: "2018-12-15T00:00:23.114Z"
                  parentCatalogCode: parentCatalog1
                  isDefault: true
      responses:
        200:
          description: Successfully created catalogs
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/catalogs/{catalogCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/CatalogCodeInPath'
    get:
      tags: ['Catalogs']
      operationId: getCatalog
      summary: Get catalog
      description: Get catalog
      responses:
        200:
          description: Returns catalog
          schema:
            type: object
            properties:
              catalog:
                $ref: '#/definitions/CatalogBase'
          examples:
            getCatalog:
              code: defaultCatalog
              name: Default Catalog
              defaultLocaleCode: en-us
              defaultCurrencyCode: USD
              externalUpdateDate: "2018-12-15T00:00:23.114Z"
              parentCatalogCode: parentCatalog1
              isDefault: true
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags: ['Catalogs']
      operationId: updateCatalog
      summary: Update catalog
      description: Update catalog
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/CatalogUpdate'
          x-examples:
            updateCatalog:
              name: Default Catalog
              defaultLocaleCode: de-de
              defaultCurrencyCode: EUR
              externalUpdateDate: "2018-12-15T00:00:23.114Z"
              parentCatalogCode: parentCatalog1
              isDefault: false
      responses:
        204:
          description: Successfully updated catalog
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: One or more properties of catalog cannot be updated
          schema:
            $ref: '#/definitions/ExtendedError'
    delete:
      tags: ['Catalogs']
      operationId: deleteCatalog
      summary: Delete catalog
      description: Delete catalog
      parameters:
        - $ref: '#/parameters/Force'
      responses:
        204:
          description: Sucessfully deleted catalog
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/attributes:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      tags:
        - Attributes
      parameters:
        - in: query
          name: filters
          description: "Filter string. Supported filters: code, name"
          format: json
          type: string
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/LocaleCode'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      operationId: getAttributes
      summary: Get attributes
      description: Get all attributes
      responses:
        200:
          description: Attribute information
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              attributes:
                type: array
                items:
                  $ref: '#/definitions/Attribute'
          examples:
            # TODO: get Examples for other attribute Types!!!!
            getAttributes:
              meta:
                limit: 10
                offset: 0
                totalItemCount: 1
              attributes:
                - code: color
                  type: text
                  use: option
                  name: Color
                  externalUpdateDate: "2018-12-15T00:00:23.114Z"
                  values:
                    - code: black
                      sequenceId: 1
                      name: Black
                      swatch:
                        type: color
                        value: "#000000"
                    - code: white
                      sequenceId: 1
                      name: White
                      swatch:
                        type: color
                        value: "#ffffff"
                - code: engraving
                  name: Engraving
                  type: input
                  use: extra
                - code: related
                  name: Related Products
                  type: productList
                  use: property
                  values:
                    - sequenceId: 1
                      name: The Jeans Pack.
                      code: pack1
                      value:
                        - jeans
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Attributes
      operationId: createAttributes
      summary: Create attributes
      description: |
        Add new attributes.

        **Localizations**

        The following properties are localized:
        - name
        - values[].name

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - attributes
            properties:
              attributes:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/AttributeCreate'
          x-examples:
            # TODO: get Examples for other attribute Types!!!!
            AttributeCreate:
              attributes:
                - code: color
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  name:
                    de-de: Farbe
                    en-us: Color
                  type: text
                  use: option
                  values:
                    - code: black
                      sequenceId: 1
                      name:
                        en-us: Black
                        de-de: Schwarz
                      swatch:
                        type: color
                        value: "#000000"
                    - code: white
                      sequenceId: 2
                      name:
                        en-us: White
                        de-de: Weiß
                      swatch:
                        type: color
                        value: "#ffffff"
                - code: engraving
                  name:
                    de-de: Gravierung
                    en-us: Engraving
                  type: input
                  use: extra
                - code: related
                  name:
                    de-de: Verwandte Produkte
                    en-us: Related Products
                  type: productList
                  use: property
                  values:
                  - sequenceId: 1
                    name:
                      de-de: Das Jeans Packet.
                      en-us: The Jeans Pack.
                    code: pack1
                    value:
                    - jeans
      responses:
        200:
          description: All attributes were created
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/attributes/{attributeCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/AttributeCode'
    get:
      tags:
        - Attributes
      parameters:
        - $ref: '#/parameters/LocaleCode'
      operationId: getAttribute
      summary: Get attribute
      description: Get attribute information
      responses:
        200:
          description: Attribute information
          schema:
            type: object
            properties:
              attribute:
                $ref: '#/definitions/Attribute'
          examples:
            getAttribute:
              code: color
              type: text
              use: option
              name: Color
              externalUpdateDate: "2018-12-15T00:00:23.114Z"
              values:
                - code: black
                  sequenceId: 1
                  name: Black
                  swatch:
                    type: color
                    value: "#000000"
                - code: white
                  sequenceId: 2
                  name: White
                  swatch:
                    type: color
                    value: "#ffffff"
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or attribute not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Attributes
      operationId: updateAttribute
      summary: Update attribute
      description: |
        Update an attribute.

        **Localizations**

        The following properties are localized:
        - name
        - values[].name

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.

        **Preserving attribute values**

        To preserve an existing attribute value pass its "code" property only.

        Example to remove all values except "green" from an attribute:

        ```json
        {
          "values": [
            { "code": "green" }
          ]
        }
        ```
      parameters:
        - $ref: '#/parameters/LocaleCode'
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AttributeUpdate'
          x-examples:
            updateAttribute:
              externalUpdateDate: '2018-12-15T00:00:23.114Z'
              name:
                de-de: Farbe
                en-us: Color
              type: text
              use: option
              values:
                - code: black
                  sequenceId: 1
                  name:
                    en-us: Black
                    de-de: Schwarz
                  swatch:
                    type: color
                    value: "#000000"
                - code: white
                  sequenceId: 2
                  name:
                    en-us: White
                    de-de: Weiß
                  swatch:
                    type: color
                    value: "#ffffff"
      responses:
        200:
          description: Successfully updated
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                $ref: '#/definitions/ErrorList'
            example:
              errors:
                - code: 409
                  entity: attributeValue
                  entityId: "black"
                  entityIndex: 0
                  reason: Attribute value is still in use by some products
                  subentityPath: [
                    values
                  ]
                  productCodes: [
                    1234567
                  ]
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or attribute not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: One or more attribute values are used for products and cannot be replaced
          schema:
            $ref: '#/definitions/ExtendedError'
    delete:
      tags:
        - Attributes
      operationId: deleteAttribute
      summary: Delete attribute
      description: Delete an attribute with all its values
      responses:
        204:
          description: Successfully deleted
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or attribute not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Attribute is used for a product option or an extra
          schema:
            $ref: '#/definitions/ExtendedError'
  /merchants/{merchantCode}/attributes/{attributeCode}/values:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/AttributeCode'
    post:
      tags:
        - Attributes
      operationId: setAttributeValues
      summary: Set attribute values
      description: |
        Set values on an attribute.

        **Localizations**

        The following properties are localized:
        - name

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
      parameters:
        - in: body
          name: body
          schema:
            type: object
            required:
              - values
            properties:
              values:
                type: array
                minItems: 1
                maxItems: 5000
                items:
                  $ref: '#/definitions/AttributeValueCreate'
          x-examples:
            setAttributeValues - rewrite:
              values:
                - code: green
                  name:
                    de-de: Grün
                    en-us: Green
                  sequenceId: 1
                  swatch:
                    type: color
                    value: "#00AA00"
            setAttributeValues - append:
                - code: black
                  sequenceId: 1
                  name:
                    en-us: Black
                    de-de: Schwarz
                  swatch:
                    type: color
                    value: "#000000"
                - code: white
                  sequenceId: 2
                  name:
                    en-us: White
                    de-de: Weiß
                  swatch:
                    type: color
                    value: "#ffffff"
                - code: green
                  name:
                    de-de: Grün
                    en-us: Green
                  sequenceId: 3
                  swatch:
                    type: color
                    value: "#00AA00"
      responses:
        201:
          description: Successfully created
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or attribute not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Conflict error
          schema:
            $ref: '#/definitions/ExtendedError'

  /merchants/{merchantCode}/attributes/{attributeCode}/values/{attributeValueCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/AttributeCode'
      - $ref: '#/parameters/AttributeValueCode'
    post:
      tags:
        - Attributes
      operationId: updateAttributeValue
      summary: Update attribute value
      description: Update attribute value
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/AttributeValueUpdate'
          x-examples:
            updateAttributeValue:
              name:
                de-de: Krasses Grün
                en-us: Super Green
              sequenceId: 3
              swatch:
                type: color
                value: "#00FF00"
      responses:
        204:
          description: Successfully updated
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or attribute value not found
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      tags:
        - Attributes
      operationId: deleteAttributeValue
      summary: Delete attribute value
      description: Delete attribute value
      responses:
        204:
          description: Successfully deleted
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Attribute not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Value is used for product option or extra
          schema:
            $ref: '#/definitions/Error'
  /merchants/{merchantCode}/categories:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      operationId: getCategories
      summary: Get categories
      description: Get categories
      tags:
        - Categories
      parameters:
        - in: query
          name: filters
          description: "Filter string. Supported filters: name, code, parentCategoryCode, status"
          type: string
          format: json
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/LocaleCode'
        - $ref: '#/parameters/CatalogCode'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/OriginalImages'
      responses:
        200:
          description: Returns categories.
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              categories:
                type: array
                items:
                  $ref: '#/definitions/Category'
          examples:
            getCategories:
              meta:
                limit: 10
                offset: 0
                totalItemCount: 3
              categories:
                - catalogCode: defaultCatalog
                  code: clothes
                  description: This category contains clothing for clothes
                  externalUpdateDate: '2019-01-12T00:00:00.114Z'
                  image: null
                  name: Clothes
                  parentCategoryCode: null
                  path: []
                  sequenceId: 0
                  status: active
                  url: https://awesomeShop.com/c/clothes
                - catalogCode: defaultCatalog
                  code: men
                  description: This category contains clothing for men
                  externalUpdateDate: '2019-01-12T00:00:00.114Z'
                  image: null
                  name: Men
                  parentCategoryCode: clothes
                  path:
                    - clothes
                  sequenceId: 0
                  status: active
                  url: https://awesomeShop.com/c/men
                - catalogCode: defaultCatalog
                  code: jeans
                  description: This category contains jeans
                  externalUpdateDate: '2019-01-12T00:00:00.114Z'
                  image: https://awesomeShop.com/img/jeans1.jpg
                  name: Jeans
                  parentCategoryCode: men
                  path:
                    - clothes
                    - men
                  sequenceId: 0
                  status: active
                  url: https://awesomeShop.com/c/jeans
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      operationId: createCategories
      summary: Create categories
      description: |
        Create new categories.

        **Localizations**

        The following properties are localized:
        - name
        - image
        - url
        - description

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
      tags:
        - Categories
      parameters:
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          schema:
            type: object
            required:
              - categories
            properties:
              categories:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/CategoryCreate'
          x-examples:
            createCategories:
              categories:
                - code: wornOutJeans
                  description:
                    de-de: Diese Kategorie enthält ausgewaschene Jeans
                    en-us: This category contains worn out jeans
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  image:
                    de-de: http://someUrl/deutschesBild.png
                    en-us: http://someUrl/englishImage.png
                  name:
                    de-de: Ausgewaschene Jeans
                    en-us: Worn out Jeans
                  parentCategoryCode: jeans
                  sequenceId: 1
                  status: active
                  url:
                    de-de: https://awesomeShop.de/c/jeans
                    en-us: https://awesomeShop.com/c/jeans
                - code: jeans
                  name:
                    en-us: Jeans
                    de-de: Jeans
                  sequenceId: 1
                  parentCategoryCode: men
                - code: men
                  name:
                    en-us: Men
                    de-de: Männer
                  sequenceId: 1
                  parentCategoryCode: clothes
                - code: clothes
                  name:
                    en-us: Clothes
                    de-de: Klamotten
                  sequenceId: 1
                  parentCategoryCode:
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/categories/{categoryCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/CategoryCode'
    post:
      operationId: updateCategory
      summary: Update category
      description: |
        Update category.

        **Localizations**

        The following properties are localized:
        - name
        - image
        - url
        - description

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
      tags:
        - Categories
      parameters:
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CategoryUpdate'
          x-examples:
            updateCategory:
              description:
                de-de: Diese Kategorie enthält ausgewaschene Jeans
                en-us: This category contains worn out jeans
              externalUpdateDate: '2018-12-15T00:00:23.114Z'
              image:
                de-de: http://someUrl/deutschesBild.png
                en-us: http://someUrl/englishImage.png
              name:
                de-de: Ausgewaschene Jeans
                en-us: Crazy worn out jeans
              parentCategoryCode: jeans
              sequenceId: 1
              status: active
              url:
                de-de: https://awesomeShop.de/c/jeans2
                en-us: https://awesomeShop.com/c/jeans2
      responses:
        204:
          description: Successfully updated
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or category not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: External update date is earlier than the existing one
          schema:
            $ref: '#/definitions/Error'
    delete:
      parameters:
        - $ref: '#/parameters/CatalogCode'
        - $ref: '#/parameters/Force'
      operationId: deleteCategory
      summary: Delete category
      description: Delete category
      tags:
        - Categories
      responses:
        204:
          description: Successfully deleted
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or category not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Category has associated products. Use the force parameter to force removal of category and product associations.
          schema:
            $ref: '#/definitions/Error'
  /merchants/{merchantCode}/exportCsv:
    post:
      operationId: exportCsv
      summary: Export entities as csv
      description: Export entities as csv
      tags:
        - Exports
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/CsvExportOptions'
          x-examples:
            exportCsv:
              delimiter: ","
              enclosure: "\""
              entity: product
              escape: "\""
              withHeader: true
      responses:
        '202':
          description: Export request accepted.
        '400':
          description: Bad request (mostly missing or invalid parameters/values)
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/exportToGoogle:
    post:
      operationId: exportToGoogle
      summary: Export entities to Google
      description: Exports entities to Google
      tags:
        - Exports
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/GoogleExportOptions'
          x-examples:
            exportToGoogle:
              feed: product
      responses:
        '202':
          description: Export request accepted.
        '400':
          description: Bad request (mostly missing or invalid parameters/values)
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: Merchant or Credentials not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/exports:
    get:
      operationId: getExports
      summary: Get exports
      description: Returns a list of Google exports
      tags:
        - Exports
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: query
          name: filters
          description: "Filter string. Supported filters:
            <ul>
              <li>id</li>
              <li>feed</li>
              <li>status</li>
            </ul>"
          type: string
          format: json
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/Sort'
      responses:
        '200':
          description: Export created.
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              exports:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/GoogleExport'
          examples:
            getExports:
              meta:
                limit: 10
                offset: 0
                totalItemCount: 2
              exports:
                - endDate: '2018-12-15T00:00:26.114Z'
                  entityCount: 74327
                  errorMessage: null
                  feed: product
                  startDate: '2018-12-15T00:00:25.114Z'
                  status: succeded
                - endDate: '2018-12-15T00:00:24.114Z'
                  entityCount: 10
                  errorMessage: Upload failed
                  feed: product
                  startDate: '2018-12-15T00:00:23.114Z'
                  status: failed
        '400':
          description: Bad request (mostly missing or invalid parameters/values)
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: Merchant or segment not found
    post:
      x-internal: true
      operationId: createExport
      summary: Create export
      description: Creates an google export feed
      tags:
        - Exports
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - feed
            properties:
              feed:
                $ref: '#/definitions/GoogleExportFeed'
          # x-examples:
          #   createExport:
          #     feed:
          #       $ref: '#/definitions/GoogleExportFeed/example'
      responses:
        '201':
          description: Export created.
          schema:
            type: object
            properties:
              id:
                type: number
                example: 1235434
          # examples:
          #   createExport:
          #     id: 1235434
        '400':
          description: Bad request (mostly missing or invalid parameters/values)
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: Merchant or segment not found
  /merchants/{merchantCode}/exports/{exportId}:
    post:
      x-internal: true
      operationId: updateExport
      summary: Update export
      description: Updates an google export entity
      tags:
        - Exports
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - $ref: '#/parameters/ExportId'
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              entityCount:
                type: number
                example: 623473
              status:
                $ref: '#/definitions/GoogleExportStatus'
              errorMessage:
                type:
                  - "null"
                  - string
                example: Upload failed
          # x-examples:
          #   updateExport:
          #     entityCount: 623473
          #     status:
          #       $ref: '#/definitions/GoogleExportStatus/example'
          #     errorMessage: Upload failed
      responses:
        '204':
          description: Export updated.
        '400':
          description: Bad request (mostly missing or invalid parameters/values)
          schema:
            $ref: '#/definitions/ValidationError'
        '404':
          description: Merchant or segment not found
        '409':
          description: Conflict while updating
          schema:
            $ref: '#/definitions/Error'
  /merchants/{merchantCode}/products:
    get:
      operationId: getProducts
      summary: Get products
      description: Get products
      tags:
        - Products
      parameters:
        - in: query
          name: filters
          description: "Filter string. Supported filters:
            <ul>
              <li>name</li>
              <li>code</li>
              <li>parentProductCode</li>
              <li>locationCode</li>
              <li>mfgPartNum</li>
              <li>distiPartNum</li>
              <li>upc</li>
              <li>ean</li>
              <li>isbn</li>
              <li>sku</li>
              <li>modelType</li>
              <li>categoryCode</li>
              <li>status</li>
              <li>startDate</li>
              <li>endDate</li>
              <li>updateDate</li>
              <li>externalUpdateDate</li>
              <li>isInventoryManaged</li>
            </ul>"
          type: string
          format: json
        - $ref: '#/parameters/CurrencyCode'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/PaginationAfter'
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/Sort'
        - $ref: '#/parameters/LocaleCode'
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: query
          name: ignoreTotalItemCount
          type: boolean
          description: private query param which prevents the route function to get totalItemCount
          default: false
        - in: query
          name: showOnlyAvailableProducts
          type: boolean
          description: Show only product which are
          default: false
        - $ref: '#/parameters/OriginalImages'
      responses:
        200:
          description: Returns all matching products
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/PaginationCursorOrOffset'
              products:
                type: array
                items:
                  allOf:
                    - $ref: '#/definitions/Product'
                    - type: object
                      properties:
                        inventories:
                          type: array
                          items:
                            $ref: '#/definitions/Inventory'
                        options:
                          $ref: '#/definitions/ProductOptions'
                        extras:
                          $ref: '#/definitions/ProductExtras'
                        availability:
                          type: object
                          description: only visible if fields include availability and showOnlyAvailableProducts is true, this can't be set on the post routes
                          properties:
                            isAvailable:
                              type: boolean
                              description: Indicates if this product is available (computed field)
          examples:
            getProducts:
              meta:
                limit: 10
                cursors:
                  after: 1b
                totalItemCount: 2
              products:
                - categories:
                  - categoryName: Jeans
                    code: jeans
                    isPrimary: true
                    path:
                      - clothes
                      - men
                      - jeans
                    sequenceId: 1
                  code: jeans
                  endDate: '2040-12-01T00:00:00.114Z'
                  eolDate: '2040-12-01T00:00:00.114Z'
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  extras: []
                  firstAvailableDate: '2018-12-01T00:00:00.114Z'
                  fulfillmentMethods:
                    - BOPIS
                  hasCatchWeight: true
                  identifiers:
                    distiPartNum: M102938475
                    ean: xxx11
                    isbn: 123xy
                    mfgPartNum: 123ab
                    sku: 98712c
                    upc: cde45
                  inventoryTreatment: showOutOfStock
                  isInventoryManaged: true
                  isSerialized: true
                  isTaxed: true
                  longName: The Jeans. Just Jeans.
                  maxQty: 5
                  media:
                  - altText: Image of the jeans
                    code: jeansyImage
                    sequenceId: 1
                    title: The Jeans
                    type: image
                    url: https://awesomeShop.com/image01.jpg
                  minQty: 2
                  modelType: standard
                  name: The Jeans
                  operationalStatus: active
                  options:
                    - code: color
                      name: Color
                      type: Text
                      values:
                        - code: white
                          name: White
                          additionalPrice: 0
                          sequenceId: 1
                          swatch:
                            type: color
                            value: "#ffffff"
                        - code: black
                          name: Black
                          additionalPrice: 0
                          sequenceId: 1
                          swatch:
                            type: color
                            value: "#000000"
                  parentProductCode: null
                  price:
                    cost: 5
                    currencyCode: USD
                    mapPricing:
                    - endDate: '2018-12-15T00:00:23.114Z'
                      price: 12
                      startDate: '2018-12-12T14:27:23.114Z'
                    maxPrice: 8
                    minPrice: 12
                    msrp: 10
                    price: 10
                    salePrice: 9
                    unit: kg
                    volumePricing:
                    - maxQty: 20
                      minQty: 8
                      price: 7
                      priceType: fixed
                      salePrice: 7
                      unit: kg
                  properties:
                  - code: material
                    displayGroup: properties
                    name: Material
                    subDisplayGroup: Info
                    type: simple
                    value: [ "Wool", "Polyester", "Nylon" ]
                  rating: 5
                  shippingInformation:
                    height: 4
                    heightUnit: cm
                    isShippedAlone: true
                    length: 30
                    lengthUnit: cm
                    weight: 40
                    weightUnit: kg
                    width: 2.3
                    widthUnit: cm
                  startDate: '2018-12-01T00:00:00.114Z'
                  status: active
                  taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
                  unit: each
                  unitPriceRefUom: each
                  unitPriceRefValue: null
                  unitValue: null
                  url: https://awesomeShop.com/theJeans
                  visibility: visible
                - categories:
                  - categoryName: Jeans
                    code: jeans
                    isPrimary: true
                    path:
                      - clothes
                      - men
                      - jeans
                    sequenceId: 1
                  code: jeans-1
                  endDate: '2040-12-01T00:00:00.114Z'
                  eolDate: '2040-12-01T00:00:00.114Z'
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  extras: []
                  firstAvailableDate: '2018-12-01T00:00:00.114Z'
                  fulfillmentMethods:
                    - BOPIS
                  hasCatchWeight: true
                  identifiers:
                    distiPartNum: M1029384756
                    ean: xxx111
                    isbn: 123xyz
                    mfgPartNum: 123abc
                    sku: 987123b
                    upc: cde456
                  inventoryTreatment: showOutOfStock
                  isInventoryManaged: true
                  isSerialized: true
                  isTaxed: true
                  longName: The Jeans. Just Jeans.
                  maxQty: 5
                  media:
                  - altText: Image of the jeans
                    code: jeansyImage
                    sequenceId: 1
                    title: The Jeans
                    type: image
                    url: https://awesomeShop.com/image01.jpg
                  minQty: 2
                  modelType: standard
                  name: The Jeans
                  operationalStatus: active
                  options:
                    - code: color
                      name: Color
                      type: Text
                      values:
                        - code: white
                          name: White
                          additionalPrice: 0
                          sequenceId: 1
                          swatch:
                            type: color
                            value: "#ffffff"
                  parentProductCode: jeans
                  price:
                    cost: 5
                    currencyCode: USD
                    mapPricing:
                    - endDate: '2018-12-15T00:00:23.114Z'
                      price: 12
                      startDate: '2018-12-12T14:27:23.114Z'
                    maxPrice: null
                    minPrice: null
                    msrp: 10
                    price: 10
                    salePrice: 9
                    unit: kg
                    volumePricing:
                    - maxQty: 20
                      minQty: 8
                      price: 7
                      priceType: fixed
                      salePrice: 7
                      unit: kg
                  properties:
                  - code: material
                    displayGroup: properties
                    name: Material
                    subDisplayGroup: Info
                    type: simple
                    value: [ "Wool", "Polyester", "Nylon" ]
                  - code: color
                    type: attribute
                    value:
                    - White
                    displayGroup: properties
                    subDisplayGroup: Appearance
                    name: Color
                  rating: 5
                  shippingInformation:
                    height: 4
                    heightUnit: cm
                    isShippedAlone: true
                    length: 30
                    lengthUnit: cm
                    weight: 40
                    weightUnit: kg
                    width: 2.3
                    widthUnit: cm
                  startDate: '2018-12-01T00:00:00.114Z'
                  status: active
                  taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
                  unit: each
                  unitPriceRefUom: each
                  unitPriceRefValue: null
                  unitValue: null
                  url: https://awesomeShop.com/theJeans
                  visibility: visible
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        403:
          description: Forbidden
          schema:
            $ref: '#/definitions/Error'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      operationId: createProducts
      summary: Create products
      description: |
        Create products.

        **Localizations**

        The following properties are localized:
        - name
        - longName
        - shortDescription
        - longDescription
        - media
        - properties[].name (not if property of type attribute)
        - properties[].subDisplayGroup
        - properties[].customDisplayGroupName

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.

        The media localization property different to the simple localization string:
        ```json
        {
          "en-us": [{
            "code": "gdt5-c",
            "url": "https://myAwesomeShop.com/image01.jpg",
            "type": "image",
            "altText": "a translated string",
            "title": "a translated string",
            "sequenceId": 1
          }],
          "de-de": [{
            "code": "gdt5-g",
            "url": "https://www.youtube.com/watch?v=aTKyjuhmZNo",
            "type": "video",
            "altText": "ein übersetzter Text",
            "title": "ein übersetzter Text",
            "sequenceId": 1
          }]
        }
        ```

        **Product Properties**

        See [Product Properties](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#product-properties) on how to use the value property based on the property.type.

        > **Note** Be sure to create Categories (jeans, men, clothes) and Attributes (color -> white) before the execution the example. Otherwise the request will result in an error.

      tags:
        - Products
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - products
            properties:
              products:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/ProductCreate'
          # TODO: full, minimal, parent child (minimal)
          x-examples:
            createProducts:
              products:
                - categories:
                  - code: jeans
                    isPrimary: true
                    sequenceId: 1
                  code: jeans
                  endDate: '2040-12-01T00:00:00.114Z'
                  eolDate: '2040-12-01T00:00:00.114Z'
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  extras: []
                  firstAvailableDate: '2018-12-01T00:00:00.114Z'
                  fulfillmentMethods:
                    - BOPIS
                  hasCatchWeight: true
                  identifiers:
                    distiPartNum: M102938475
                    ean: xxx11
                    isbn: 123xy
                    mfgPartNum: 123ab
                    sku: 98712c
                    upc: cde45
                  inventoryTreatment: showOutOfStock
                  isInventoryManaged: true
                  isSerialized: true
                  isTaxed: true
                  longDescription:
                    en-us: Very long description.
                    de-de: Sehr lange Beschreibung.
                  longName:
                    en-us: The Jeans. Just Jeans.
                    de-de: Die Jeans. Nur Jeans.
                  maxQty: 5
                  media:
                    en-us:
                      - altText: Image of the jeans
                        code: jeansyImage
                        sequenceId: 1
                        title: The Jeans
                        type: image
                        url: https://awesomeShop.com/image01.jpg
                    de-de:
                      - altText: Bild der Hose
                        code: jeansyImageDE
                        sequenceId: 1
                        title: Die Jeans
                        type: image
                        url: https://awesomeShop.com/image01.jpg
                  minQty: 2
                  modelType: configurable
                  name:
                    en-us: The Jeans
                    de-de: Die Jeans
                  options:
                    - code: color
                      values:
                        - code: white
                          additionalPrice: 0
                        - code: black
                          additionalPrice: 0
                  parentProductCode: null
                  price:
                    cost: 5
                    currencyCode: USD
                    mapPricing:
                    - endDate: '2018-12-15T00:00:23.114Z'
                      price: 12
                      startDate: '2018-12-12T14:27:23.114Z'
                    msrp: 10
                    price: 10
                    salePrice: 9
                    unit: kg
                    volumePricing:
                    - maxQty: 20
                      minQty: 8
                      price: 7
                      priceType: fixed
                      salePrice: 7
                      unit: kg
                  properties:
                    - code: material
                      displayGroup: properties
                      name:
                        en-us: Material
                        de-de: Material
                      subDisplayGroup:
                        en-us: Info
                        de-de: Info
                      type: simple
                      value:
                        en-us: [ "Wool", "Polyester", "Nylon" ]
                        de-de: [ "Wolle", "Polyester", "Nylon" ]
                  rating: 5
                  shippingInformation:
                    height: 4
                    heightUnit: cm
                    isShippedAlone: true
                    length: 30
                    lengthUnit: cm
                    weight: 40
                    weightUnit: kg
                    width: 2.3
                    widthUnit: cm
                  shortDescription:
                    en-us: Short Description.
                    de-de: Kurze Beschreibung.
                  startDate: '2018-12-01T00:00:00.114Z'
                  status: active
                  taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
                  unit: each
                  unitPriceRefUom: each
                  unitPriceRefValue: 1
                  unitValue: 1
                  url: https://awesomeShop.com/theJeans
                  visibility: visible
                - categories:
                  - code: jeans
                    isPrimary: true
                    sequenceId: 1
                  code: jeans-1
                  endDate: '2040-12-01T00:00:00.114Z'
                  eolDate: '2040-12-01T00:00:00.114Z'
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  extras: []
                  firstAvailableDate: '2018-12-01T00:00:00.114Z'
                  fulfillmentMethods:
                    - BOPIS
                  hasCatchWeight: true
                  identifiers:
                    distiPartNum: M1029384756
                    ean: xxx111
                    isbn: 123xyz
                    mfgPartNum: 123abc
                    sku: 987123b
                    upc: cde456
                  inventoryTreatment: showOutOfStock
                  isInventoryManaged: true
                  isSerialized: true
                  isTaxed: true
                  longDescription:
                    en-us: Very long description.
                    de-de: Sehr lange Beschreibung.
                  longName:
                    en-us: The Jeans. Just Jeans.
                    de-de: Die Jeans. Nur Jeans.
                  maxQty: 5
                  media:
                    en-us:
                      - altText: Image of the jeans
                        code: jeansyImage
                        sequenceId: 1
                        title: The Jeans
                        type: image
                        url: https://awesomeShop.com/image01.jpg
                    de-de:
                      - altText: Bild der Hose
                        code: jeansyImageDE
                        sequenceId: 1
                        title: Die Jeans
                        type: image
                        url: https://awesomeShop.com/image01.jpg
                  minQty: 2
                  modelType: variant
                  name:
                    en-us: The Jeans
                    de-de: Die Jeans
                  options:
                    - code: color
                      values:
                        - code: white
                          additionalPrice: 0
                  parentProductCode: jeans
                  price:
                    cost: 5
                    currencyCode: USD
                    mapPricing:
                    - endDate: '2018-12-15T00:00:23.114Z'
                      price: 12
                      startDate: '2018-12-12T14:27:23.114Z'
                    msrp: 10
                    price: 10
                    salePrice: 9
                    unit: kg
                    volumePricing:
                    - maxQty: 20
                      minQty: 8
                      price: 7
                      priceType: fixed
                      salePrice: 7
                      unit: kg
                  properties:
                  - code: material
                    displayGroup: properties
                    name:
                      en-us: Material
                      de-de: Material
                    subDisplayGroup:
                      en-us: Info
                      de-de: Info
                    type: simple
                    value:
                      en-us: [ "Wool", "Polyester", "Nylon" ]
                      de-de: [ "Wolle", "Polyester", "Nylon" ]
                  - code: 'color'
                    value:
                      - white
                    type: attribute
                    displayGroup: properties
                    subDisplayGroup:
                      en-us: 'Appearance'
                      de-de: 'Aussehen'
                  rating: 5
                  shippingInformation:
                    height: 4
                    heightUnit: cm
                    isShippedAlone: true
                    length: 30
                    lengthUnit: cm
                    weight: 40
                    weightUnit: kg
                    width: 2.3
                    widthUnit: cm
                  shortDescription:
                    en-us: Short description.
                    de-de: Kurze Beschreibung.
                  startDate: '2018-12-01T00:00:00.114Z'
                  status: active
                  taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
                  unit: each
                  unitPriceRefUom: each
                  unitPriceRefValue: 1
                  unitValue: 1
                  url: https://awesomeShop.com/theJeans
                  visibility: visible
            createProducts - minimal:
              products:
                - code: minimalProduct
                  isInventoryManaged: true
                  modelType: standard
                  name:
                   en-us: 'Minimal Product'
                   de-de: 'Minimales Produkt'
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/batchCodeCompare:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/CatalogCode'
    post:
      x-internal: true
      operationId: batchCodeCompare
      description: Private. Batch compares entities for import
      summary: Batch compare
      tags:
        - Batch
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              locationCodes:
                type: array
                items:
                  type: string
                  maxLength: 255
              productCodes:
                type: array
                items:
                  type: string
                  maxLength: 255
              categoryCodes:
                type: array
                items:
                  type: string
                  maxLength: 255
              inventories:
                type: array
                items:
                  $ref: '#/definitions/InventoryCompare'
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              productCodes:
                type: array
                items:
                  type: string
              categoryCodes:
                type: array
                items:
                  type: string
              inventories:
                type: array
                items:
                  $ref: '#/definitions/InventoryCompare'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/batch:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    post:
      x-internal: true
      operationId: batch
      summary: Batch
      description: Private. Batch operations of entities
      tags:
        - Batch
      parameters:
        - in: body
          name: body
          description: |
            Event batched to be executed. Currently 3 operations (created, updated, deleted) and 3 entities are supported (category, product, inventory) </br>
            The payload of the events is the same structure as the single endpoint of the operation of the entity.</br>
            For instance entityCreated with the entity product expect the same structure as a single product entry of the endpoint /v1/merchants/{merchantCode}/products
          required: true
          schema:
            type: array
            items:
              type: object
              required:
                - event
                - entity
              properties:
                event:
                  type: string
                  enum:
                    - entityCreated
                    - entityUpdated
                    - entityDeleted
                entity:
                  type: string
                  enum:
                    - product
                    - category
                    - inventory
                entityId:
                  type: string
                  description: Id of the affected entity. Only reequired if the event is entityUpdated or entityDeleted
                payload:
                  type: object
            example:
              - event: entityDeleted
                entityId: 24-MB01
                entity: product
              - event: entityUpdated
                entityId: cat1
                entity: category
                payload:
                  name:
                    'en-us': New category name
              - event: entityCreated
                entityId: cat1
                entity: product
                payload:
                  code: prod1
                  name:
                    'en-us': Awesome new product
                  modelType: 'standard'
                  isInventoryManaged: false
                  price:
                    price: 9.99
                    currencyCode: USD
      responses:
        200:
          description: OK
          schema:
            type: object
            required:
              - errors
            properties:
              errors:
                $ref: '#/definitions/ErrorList'
            example:
              errors:
                - code: 400
                  entity: product
                  entityIndex: 0
                  reason: Product does not pass validation
                  subentityPath: []
                  validationErrors:
                    - code: OBJECT_MISSING_REQUIRED_PROPERTY
                      message: "Missing required property: code"
                      path: ["products", "0"]
                - code: 409
                  entity: product
                  entityId: "1234567"
                  entityIndex: 1
                  reason: Product 1234567 already exists
                  subentityPath: []

        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/products/{productCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/ProductCode'
    get:
      tags:
        - Products
      operationId: getProduct
      summary: Get product
      description: Get a single product
      parameters:
        - $ref: '#/parameters/Fields'
        - $ref: '#/parameters/OriginalImages'
        - $ref: '#/parameters/LocaleCode'
        - $ref: '#/parameters/CatalogCode'
      responses:
        200:
          description: Returns the product
          schema:
            type: object
            properties:
              product:
                allOf:
                  - $ref: '#/definitions/Product'
                  - type: object
                    properties:
                      inventories:
                        type: array
                        items:
                          $ref: '#/definitions/Inventory'
                      options:
                        $ref: '#/definitions/ProductOptions'
                      extras:
                        $ref: '#/definitions/ProductExtras'
                      operationalStatus:
                        type: string
                        enum:
                          - active
                          - inactive
                          - scheduled
                          - expired
          examples:
            getProduct:
              product:
                categories:
                - categoryName: Jeans
                  code: jeans
                  isPrimary: true
                  path:
                    - clothes
                    - men
                    - jeans
                  sequenceId: 1
                code: jeans
                endDate: '2040-12-01T00:00:00.114Z'
                eolDate: '2040-12-01T00:00:00.114Z'
                externalUpdateDate: '2018-12-15T00:00:23.114Z'
                extras: []
                firstAvailableDate: '2018-12-01T00:00:00.114Z'
                fulfillmentMethods:
                  - BOPIS
                hasCatchWeight: true
                identifiers:
                  distiPartNum: M102938475
                  ean: xxx11
                  isbn: 123xy
                  mfgPartNum: 123ab
                  sku: 98712c
                  upc: cde45
                inventoryTreatment: showOutOfStock
                isInventoryManaged: true
                isSerialized: true
                isTaxed: true
                longName: The Jeans. Just Jeans.
                maxQty: 5
                media:
                - altText: Image of the jeans
                  code: jeansyImage
                  sequenceId: 1
                  title: The Jeans
                  type: image
                  url: https://awesomeShop.com/image01.jpg
                minQty: 2
                modelType: standard
                name: The Jeans
                operationalStatus: active
                options:
                  - code: color
                    name: Color
                    type: Text
                    values:
                      - code: white
                        name: White
                        additionalPrice: 0
                        sequenceId: 1
                        swatch:
                          type: color
                          value: "#ffffff"
                      - code: black
                        name: Black
                        additionalPrice: 0
                        sequenceId: 1
                        swatch:
                          type: color
                          value: "#000000"
                parentProductCode: null
                price:
                  cost: 5
                  currencyCode: USD
                  mapPricing:
                  - endDate: '2018-12-15T00:00:23.114Z'
                    price: 12
                    startDate: '2018-12-12T14:27:23.114Z'
                  maxPrice: 8
                  minPrice: 12
                  msrp: 10
                  price: 10
                  salePrice: 9
                  unit: kg
                  volumePricing:
                  - maxQty: 20
                    minQty: 8
                    price: 7
                    priceType: fixed
                    salePrice: 7
                    unit: kg
                properties:
                - code: material
                  displayGroup: properties
                  name: Material
                  subDisplayGroup: Info
                  type: simple
                  value: [ "Wool", "Polyester", "Nylon" ]
                rating: 5
                shippingInformation:
                  height: 4
                  heightUnit: cm
                  isShippedAlone: true
                  length: 30
                  lengthUnit: cm
                  weight: 40
                  weightUnit: kg
                  width: 2.3
                  widthUnit: cm
                startDate: '2018-12-01T00:00:00.114Z'
                status: active
                taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
                unit: each
                unitPriceRefUom: each
                unitPriceRefValue: null
                unitValue: null
                url: https://awesomeShop.com/theJeans
                visibility: visible
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or product not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Products
      operationId: updateProduct
      summary: Update product
      description: |
        Update the specific product. Only the values which are set will be updated.

        **Localizations**

        The following properties are localized:
        - name
        - longName
        - shortDescription
        - longDescription
        - media
        - properties[].name
        - properties[].subDisplayGroup
        - properties[].customDisplayGroupName

        see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.

        The media localization property is a little different to the simple localization string:
        ```json
        {
          "en-us": [{
            "code": "gdt5-c",
            "url": "https://myAwesomeShop.com/image01.jpg",
            "type": "image",
            "altText": "a translated string",
            "title": "a translated string",
            "sequenceId": 1
          }],
          "de-de": [{
            "code": "gdt5-g",
            "url": "https://www.youtube.com/watch?v=aTKyjuhmZNo",
            "type": "video",
            "altText": "ein übersetzter Text",
            "title": "ein übersetzter Text",
            "sequenceId": 1
          }]
        }
        ```

        **Product Properties**

        See [Product Properties](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#product-properties) on how to use the value property based on the property.type.
      parameters:
        - $ref: '#/parameters/CatalogCode'
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/ProductUpdate'
          x-examples:
            updateProduct:
              categories:
                - code: jeans
                  isPrimary: true
                  sequenceId: 1
              endDate: '2040-12-01T00:00:00.114Z'
              eolDate: '2040-12-01T00:00:00.114Z'
              externalUpdateDate: '2018-12-15T00:00:23.114Z'
              extras: []
              firstAvailableDate: '2018-12-01T00:00:00.114Z'
              fulfillmentMethods:
                - BOPIS
              hasCatchWeight: true
              identifiers:
                distiPartNum: M1029384756
                ean: xxx111
                isbn: 123xyz
                mfgPartNum: 123abc
                sku: 987123b
                upc: cde456
              inventoryTreatment: showOutOfStock
              isInventoryManaged: true
              isSerialized: true
              isTaxed: true
              longDescription:
                en-us: Very long description.
                de-de: Sehr lange Beschreibung.
              longName:
                en-us: The Jeans. Just Jeans.
                de-de: Die Jeans. Nur Jeans.
              maxQty: 5
              media:
              - altText: Image of the jeans
                code: jeansyImage
                sequenceId: 1
                title: The Jeans
                type: image
                url: https://awesomeShop.com/image01.jpg
              minQty: 2
              modelType: standard
              name:
                en-us: The Jeans
                de-de: Die Jeans
              options:
                - code: color
                  values:
                    - code: white
                      additionalPrice: 0
              parentProductCode: jeans
              price:
                cost: 5
                currencyCode: USD
                mapPricing:
                - endDate: '2018-12-15T00:00:23.114Z'
                  price: 12
                  startDate: '2018-12-12T14:27:23.114Z'
                maxPrice: null
                minPrice: null
                msrp: 10
                price: 10
                salePrice: 9
                unit: kg
                volumePricing:
                - maxQty: 20
                  minQty: 8
                  price: 7
                  priceType: fixed
                  salePrice: 7
                  unit: kg
              properties:
              - code: material
                displayGroup: properties
                name:
                  en-us: Material
                  de-de: Material
                subDisplayGroup:
                  en-us: Info
                  de-de: Info
                type: simple
                value:
                  en-us: [ "Wool", "Polyester", "Nylon" ]
                  de-de: [ "Wolle", "Polyester", "Nylon" ]
              rating: 5
              shippingInformation:
                height: 4
                heightUnit: cm
                isShippedAlone: true
                length: 30
                lengthUnit: cm
                weight: 40
                weightUnit: kg
                width: 2.3
                widthUnit: cm
              shortDescription:
                en-us: Short description.
                de-de: Kurze Beschreibung.
              startDate: '2018-12-01T00:00:00.114Z'
              status: active
              taxClass: f8c5c2e9-5671-4870-8557-7659832e0e20
              unit: each
              unitPriceRefUom: each
              unitPriceRefValue: null
              unitValue: null
              url: https://awesomeShop.com/theJeans
              visibility: visible
      responses:
        204:
          description: Successfully updated
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or product not found
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      operationId: deleteProduct
      summary: Delete product
      description: Delete product
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/CatalogCode'
      responses:
        204:
          description: Successfully deleted
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or product not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/products/{productCode}/descriptions:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/ProductCode'
    get:
      operationId: getProductDescriptions
      summary: Get product descriptions
      description: Get product descriptions
      tags:
        - Products
      parameters:
        - $ref: '#/parameters/LocaleCode'
      responses:
        200:
          description: Return the descriptions of the product
          schema:
            type: object
            properties:
              shortDescription:
                type: string
              longDescription:
                type: string
          examples:
            getProductDescriptions:
              shortDescription: text
              longDescription: long text
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/products/{productCode}/validate:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/ProductCode'
    post:
      tags:
        - Products
      operationId: validateVariant
      summary: Validate variant
      description: Validates the selected options and returns possible options or the matching variant
      parameters:
        - $ref: '#/parameters/LocationCode'
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - selectedOptions
            properties:
              selectedOptions:
                type: array
                items:
                  type: object
                  required:
                    - code
                    - valueCode
                  properties:
                    code:
                      $ref: '#/definitions/AttributeCode'
                    valueCode:
                      $ref: '#/definitions/AttributeValueCode'
          x-examples:
            validateVariant:
              selectedOptions:
                - code: color
                  valueCode: white
      responses:
        200:
          description: Return the possible options or matching variants
          schema:
            type: object
            properties:
              possibleOptions:
                $ref: '#/definitions/ProductOptions'
              matchingVariant:
                type: object
                properties:
                  productCode:
                    type: string
                    example: MH02-S-Black
                  isPurchasable:
                    type: boolean
          examples:
            validateVariant - One option selected:
              possibleOptions:
                - code: color
                  name: Color
                  values:
                    - code: white
                      name: White
                      sequenceId: 1
                    - code: black
                      name: Black
                      sequenceId: 2
            validateVariant - Matching variant:
              matchingVariant:
                productCode: jeans-1
                isPurchasable: true
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or product not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/inventories:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      tags:
        - Inventories
      operationId: getInventories
      summary: Get inventories
      description: Get inventories for merchant
      parameters:
        - in: query
          name: filters
          description: |
            Filter string. Supported filters:
            <ul>
              <li>productCode</li>
              <li>locationCode</li>
              <li>sku</li>
              <li>status</li>
              <li>product.name</li>
              <li>product.identifiers.ean</li>
              <li>product.identifiers.upc</li>
              <li>product.identifiers.sku</li>
              <li>product.identifiers.isbn</li>
              <li>product.identifiers.mfgPartNum</li>
              <li>product.identifiers.distiPartNum</li>
            </ul>
          format: json
          type: string
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/PaginationAfter'
        - $ref: '#/parameters/OmitTotalItemCount'
        - $ref: '#/parameters/Sort'
        - in: query
          name: fields
          type: string
          format: csv
          description: |
            Fields which should be included in the response. This field is optional. If the field is not set the default fields will be shown:
            Supported values: qty, identifier
      responses:
        200:
          description: Returns inventories
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/PaginationCursorOrOffset'
              inventories:
                type: array
                items:
                  $ref: '#/definitions/Inventory'
          examples:
            getInventories:
              meta:
                cursors:
                  after: 16471
                limit: 10
                offset: 0
                totalItemCount: 1
              inventories:
                - available: 95
                  onHand: 100
                  onReserve: 5
                  safetyStock: 10
                  visible: 85
                  status: active
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  bin: '1203'
                  binLocation: 1203-4
                  locationCode: DERetail1
                  productCode: jeans-1
                  inventoryTreatmentSetting:
                    code: its1
                    name: testName
                    isPurchasable: true
                  sku: 54nf444
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Inventories
      operationId: setInventories
      summary: Set inventories
      description: |
        Set inventory for multiple products

        > **Note**: The location has to be set up first.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - inventories
            properties:
              inventories:
                type: array
                items:
                  $ref: '#/definitions/InventoryPost'
          x-examples:
            application/json:
              inventories:
                - bin: '1203'
                  binLocation: 1203-4
                  externalUpdateDate: '2018-12-15T00:00:23.114Z'
                  locationCode: DERetail1
                  inventoryTreatmentSetting:
                    code: its1
                  onHand: 4
                  productCode: jeans-1
                  safetyStock: 1
                  sku: 54nf444
                  status: active
      responses:
        200:
          description: Successfully set
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or product not found
          schema:
            $ref: '#/definitions/NotFoundError'
    patch:
      tags:
        - Inventories
      operationId: incrementDecrementInventory
      summary: Increment / decrement inventory
      description: |
        Apply operations such as increment or decrement to the inventory of multiple products

        > **Note**: The location has to be set up first.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - inventories
            properties:
              inventories:
                type: array
                items:
                  type: object
                  required:
                    - productCode
                    - locationCode
                    - sku
                    - operationType
                  properties:
                    productCode:
                      type: string
                      maxLength: 255
                      example: productCode1
                    locationCode:
                      $ref: '#/definitions/LocationCode'
                    inventoryTreatmentSetting:
                      $ref: '#/definitions/InventoryTreatmentSettingUpdate'
                    sku:
                      type:
                        - "null"
                        - string
                      example: SKU-1
                      maxLength: 255
                    bin:
                      $ref: '#/definitions/Bin'
                    binLocation:
                      $ref: '#/definitions/BinLocation'
                    operationType:
                      type: string
                      enum:
                        - increment
                        - decrement
                    onHand:
                      type: number
                      example: 10
          x-examples:
            incrementDecrementInventory:
              inventories:
              - bin: '1203'
                binLocation: 1203-4
                locationCode: DERetail1
                onHand: 10
                operationType: increment
                productCode: jeans-1
                inventoryTreatmentSetting:
                  code: its1
                sku: SKU-1
      responses:
        200:
          description: Successfully updated
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory not found
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      tags:
        - Inventories
      operationId: deleteInventories
      summary: Delete inventories
      description: |
        Delete inventories

        > **Note**: The location has to be set up first.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - inventories
            properties:
              inventories:
                type: array
                minItems: 1
                items:
                  type: object
                  required:
                    - productCode
                    - locationCode
                    - sku
                  properties:
                    productCode:
                      type: string
                      example: productCode1
                      maxLength: 255
                    locationCode:
                      $ref: '#/definitions/LocationCode'
                      maxLength: 255
                    sku:
                      type:
                        - "null"
                        - string
                      example: SKU-1
                      maxLength: 255
                    bin:
                      $ref: '#/definitions/Bin'
                    binLocation:
                      $ref: '#/definitions/BinLocation'
      responses:
        200:
          description: Successfully deleted
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/locationInventories:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      tags:
        - Inventories
      operationId: getLocationInventories
      summary: Get location inventories
      description: |
        Get location inventories for merchant

        > **Note**: The location has to be set up first.
      parameters:
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationAfter'
        - $ref: '#/parameters/LocaleCode'
        - in: query
          name: filters
          type: string
          description: "Filter string. Supported filters: productCode, locationCode, product.modelType, product.name, product.identifiers.ean, product.identifiers.upc, product.identifiers.sku, product.identifiers.isbn, product.identifiers.mfgPartNum, product.identifiers.distiPartNum"
      responses:
        200:
          description: Returns inventories
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/PaginationCursor'
              locationInventories:
                type: array
                items:
                  $ref: '#/definitions/LocationInventoryExtended'
          examples:
            getLocationInventories:
              meta:
                limit: 100
                cursors:
                  after: 542ae3145
                totalItemCount: 2876
              inventories:
                - productCode: jeans1
                  locationCode: loc1
                  inventoryTreatmentSetting:
                    code: its1
                    name: testName
                    isPurchasable: false
                  onHand: 300
                  onReserve: 50
                  available: 250
                  safetyStock: 50
                  visible: 200
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      x-internal: true
      tags:
        - Inventories
      operationId: getLocationInventoriesBatch
      summary: Get location inventories (Batch)
      description: |
        Get location inventories for merchant

        > **Note**: The location has to be set up first.
      parameters:
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationAfter'
        - in: query
          name: filters
          type: string
          description: "Filter string. Supported filters: productCode"
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - excludedLocationIds
            properties:
              excludedLocationIds:
                type: array
                items:
                  type: string
                  example: 550e8400-e29b-11d4-a716-446655440000
      responses:
        200:
          description: Returns inventories
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/PaginationCursor'
              locationInventories:
                type: array
                items:
                  $ref: '#/definitions/LocationInventory'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      x-internal: true
      tags:
        - Inventories
      operationId: deleteLocationInventories
      summary: Delete location inventories
      description: |
        Delete location inventories for merchant

        > **Note**: The location has to be set up first.
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - locationCodes
            properties:
              locationCodes:
                type: array
                items:
                  type: string
                  example: 550e8400-e29b-11d4-a716-446655440000
      responses:
        200:
          description: Successfully deleted
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/reservations:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      tags:
        - Inventories
      operationId: getReservations
      summary: Get reservations
      description: Get reservations for merchant
      parameters:
        - in: query
          name: filters
          description: "Filter string. Supported filters: code, locationCode, productCode, sku, salesOrderNumber, fulfillmentOrderNumber"
          type: string
          format: json
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
        - $ref: '#/parameters/Sort'
      responses:
        200:
          description: Returns reservations
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              reservations:
                type: array
                items:
                  $ref: '#/definitions/Reservation'
          examples:
            getReservations:
              meta:
                limit: 10
                offset: 0
                totalItemCount: 1
              reservations:
                - bin: '1203'
                  binLocation: 1203-4
                  fulfillmentOrderLineItemId: 1
                  fulfillmentOrderNumber: someCode
                  locationCode: DERetail1
                  productCode: someCode
                  quantity: 1
                  salesOrderLineItemCode: someCode
                  salesOrderNumber: someCode
                  sku: SKU-1
                  createDate: "2018-12-15T00:00:23.114Z"
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Inventories
      operationId: reserveInventory
      summary: Reserve inventory
      description: |
        Reserve inventory for multiple products

        > **Note**: The location has to be set up first.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - reservations
            properties:
              reservations:
                type: array
                items:
                  $ref: '#/definitions/ReservationCreate'
          x-examples:
            reserverInventory:
              reservations:
                - bin: '1203'
                  binLocation: 1203-4
                  fulfillmentOrderLineItemId: 1
                  fulfillmentOrderNumber: someCode
                  locationCode: DERetail1
                  productCode: jeans-1
                  quantity: 1
                  salesOrderLineItemCode: someCode
                  salesOrderNumber: someCode
                  sku: SKU-1
                - bin: null
                  binLocation: null
                  locationCode: DERetail1
                  productCode: jeans-1
                  quantity: 1
                  salesOrderLineItemCode: someCode
                  salesOrderNumber: someCode
                  sku: null
      responses:
        200:
          description: Successfully created
          schema:
            type: object
            properties:
              codes:
                type: array
                items:
                  type: string
              errors:
                $ref: '#/definitions/ErrorList'
          examples:
            reserverInventory:
              codes:
              - someCode
              errors:
              - catalogCode: catalog1
                code: 400
                entity: planet
                entityId: pluto
                entityIndex: 9
                reason: Planet pluto was not found (did you mean dwarf planet pluto?)
                subentityPath:
                - sunSystem
                - bodies
                validationErrors:
                - code: MAX_LENGTH
                  description: Property Name is too long
                  message: Name too long
                  path:
                  - name
              - catalogCode: catalog1
                code: 400
                entity: planet
                entityId: jupiter
                entityIndex: 5
                reason: The planet is too big
                subentityPath:
                - sunSystem
                - bodies
                validationErrors:
                - code: MAX_LENGTH
                  description: Property Name is too long
                  message: Name too long
                  path:
                  - name
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Reservation already exists
          schema:
            $ref: '#/definitions/Error'
    delete:
      tags:
        - Inventories
      operationId: deleteInventoryReservations
      summary: Delete inventory reservations
      description: Delete inventory reservations for products of fulfillmentOrders.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - codes
            properties:
              codes:
                type: array
                minItems: 1
                items:
                  type: string
      responses:
        200:
          description: Successfully deleted
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory reservation not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/reservations/settle:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    post:
      tags:
        - Inventories
      operationId: settleReservations
      summary: Settle reservations
      description:
        Settle all reservations for a fulfillment order, i.e. the reservations are deleted and the actual inventory is
        modified accordingly.
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - fulfillmentOrderNumbers
            properties:
              fulfillmentOrderNumbers:
                type: array
                items:
                  type: string
                example:
                  - someCode
                  - anotherCode
          x-examples:
            settleReservations:
              fulfillmentOrderNumbers:
                - someCode
                - anotherCode
      responses:
        200:
          description: Successfully updated
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory reservations for the fulfillment order found.
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Reservations can not get settled because of inventory misconfiguration
          schema:
            $ref: '#/definitions/Error'
  /merchants/{merchantCode}/reservations/{reservationCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/ReservationCode'
    post:
      tags:
        - Inventories
      operationId: updateReservation
      summary: Update reservation
      description: Update an existing inventory with fulfillmentOrderNumber, fulfillmentOrderLineItemId and/or quantity
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            properties:
              fulfillmentOrderNumber:
                type: string
                example: someCode
              fulfillmentOrderLineItemId:
                type: number
                example: 41663
              quantity:
                type: number
                minimum: 1
                example: 1
          x-examples:
            updateReservation:
              fulfillmentOrderNumber: someCode
              fulfillmentOrderLineItemId: 41663
              quantity: 1
      responses:
        204:
          description: Successfully updated
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
        409:
          description: Reservation already has fulfillmentOrderNumber
          schema:
            $ref: '#/definitions/Error'
    get:
      tags:
        - Inventories
      operationId: getReservation
      summary: Get reservation
      description: Get reservation by code
      responses:
        200:
          description: Returns reservation
          schema:
            type: object
            properties:
              reservation:
                $ref: '#/definitions/Reservation'
          examples:
            getReservation:
              reservation:
                bin: '1203'
                binLocation: 1203-4
                fulfillmentOrderLineItemId: 1
                fulfillmentOrderNumber: someCode
                locationCode: DERetail1
                productCode: someCode
                quantity: 1
                salesOrderLineItemCode: someCode
                salesOrderNumber: someCode
                sku: SKU-1
                createDate: "2018-12-15T00:00:23.114Z"
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, location or inventory not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/productInventories:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    post:
      tags:
        - Inventories
      operationId: getProductInventories
      summary: Get product inventories
      description: |
        This endpoint returns the inventories for the given product and location combination. It can be used to revalidate cart actions or to indicates stock changes in the cart.

        The location can be null in order to get the cumulated inventory for this product.

        > **Note**: The location has to be set up first.
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              type: object
              required:
                - productCode
              properties:
                productCode:
                  type: string
                  description: Code of the product
                  example: someProductCode
                locationCode:
                  type:
                    - "null"
                    - string
                  description: code of the location, can be null in order to get the cumulated inventory for this product.
                  example: LOCATION123
          x-examples:
            getProductInventories:
              - productCode: jeans-1
                locationCode: LOCATION123
      responses:
        200:
          description: OK
          schema:
            type: object
            properties:
              productInventories:
                type: array
                items:
                  type: object
                  properties:
                    productCode:
                      type: string
                      description: Code of the product
                      example: jeans-1
                    locationCode:
                      type: string
                      description: code of the location
                      example: LOCATION123
                    inventoryTreatmentSetting:
                      $ref: '#/definitions/InventoryTreatmentSetting'
                    isAvailable:
                      type: boolean
                      description: This field indicates if a product is available or not. It combines all information of the inventory managment and the flags on the product
                      example: true
                    available:
                      type: number
                      description: Available stock for this location
                      example: 10
                    visible:
                      type: number
                      description: Visible stock for this location
                      example: 5
          examples:
            getProductInventories:
              productInventories:
                - productCode: jeans-1
                  locationCode: LOCATION123
                  inventoryTreatmentSetting:
                    code: its1
                    name: testName
                    isPurchasable: true
                  isAvailable: true
                  available: 10
                  visible: 5
  /merchants/{merchantCode}/cumulatedInventories:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - $ref: '#/parameters/CatalogCode'
    get:
      tags:
        - Inventories
      operationId: getCumulatedInventories
      summary: Get cumulated inventories
      description: This endpoint returns cumulated inventory for a catalog per product. If no catalog code is provided, the default catalog is used. **This endpoint is meant to be used for ship from store functionality**
      parameters:
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationAfter'
        - in: query
          name: filters
          description: |
            Filter string. Supported filters are: productCode, createDate, updateDate.
            Expects the date filters in UTC time. (e.g. 2023-05-11T10:04:12.694Z)
            Filters on date and product code are mutually exclusive.
          type: string
          format: json
        - in: query
          name: ignoreTotalItemCount
          type: boolean
          description: private query param which prevents the route function to get totalItemCount
          default: false
      responses:
        200:
          description: Returns cumulated inventory for a catalog
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/PaginationCursor'
              cumulatedInventories:
                type: array
                items:
                  type: object
                  properties:
                    productCode:
                      $ref: '#/definitions/Code'
                    isAvailable:
                      type: boolean
                      example: true
                    available:
                      type: number
                      example: 145
                    visible:
                      type: number
                      example: 143
          examples:
            getCumulatedInventories:
              meta:
                limit: 100
                cursors:
                  after: 542ae3145
                totalItemCount: 2876
              cumulatedInventories:
                - producCode: productA
                  visible: 143
                  available: 145
                  isAvailable: true
  /merchants/{merchantCode}/cumulatedInventories/process:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/CatalogCode'
    post:
      tags:
        - Inventories
      x-internal: true
      operationId: processCumulatedInventory
      summary: Process cumulated inventory
      description: Process cumulated inventory
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              productCodes:
                type: array
                description: Codes of the products to be processed
                items:
                  $ref: '#/definitions/Code'
                maxItems: 1000
          x-examples:
            processCumulatedInventory:
              productCodes:
                - productA
                - productB
                - productC
      responses:
        200:
          description: Response of a cumulated inventory processing
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant, Catalog or other subentities not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/cumulatedInventoryReservations:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
    get:
      x-internal: true
      tags:
        - Inventories
      parameters:
        - $ref: '#/parameters/PaginationLimit'
        - $ref: '#/parameters/PaginationOffset'
      responses:
        200:
          description: Returns catalogs
          schema:
            type: object
            properties:
              meta:
                $ref: '#/definitions/Pagination'
              cumulatedInventoryReservations:
                type: array
                items:
                  type: object
                  properties:
                    salesOrderNumber:
                      $ref: '#/definitions/Code'
                    productReservations:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        required:
                          - salesOrderLineItemCode
                          - productCode
                          - quantity
                        properties:
                          productCode:
                            $ref: '#/definitions/Code'
                          salesOrderLineItemCode:
                            $ref: '#/definitions/Code'
                          quantity:
                            type: number
                            minimum: 0
                            example: 10
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      tags:
        - Inventories
      x-internal: true
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              cumulatedInventoryReservations:
                type: array
                description: List of reservations
                items:
                  type: object
                  required:
                    - salesOrderNumber
                    - productReservations
                  properties:
                    salesOrderNumber:
                      $ref: '#/definitions/Code'
                    productReservations:
                      type: array
                      minItems: 1
                      items:
                        type: object
                        required:
                          - productCode
                          - salesOrderLineItemCode
                          - quantity
                        properties:
                          productCode:
                            $ref: '#/definitions/Code'
                          salesOrderLineItemCode:
                            $ref: '#/definitions/Code'
                          quantity:
                            type: number
                            minimum: 0
                            example: 10
      responses:
        200:
          description: Successfully created
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/cumulatedInventoryReservations/{salesOrderNumber}:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - name: salesOrderNumber
        in: path
        type: string
        required: true
    post:
      x-internal: true
      tags:
        - Inventories
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: object
            properties:
              productReservations:
                type: array
                minItems: 1
                items:
                  type: object
                  required:
                    - productCode
                    - quantity
                    - salesOrderLineItemCode
                  properties:
                    productCode:
                      $ref: '#/definitions/Code'
                    salesOrderLineItemCode:
                      $ref: '#/definitions/Code'
                    quantity:
                      type: number
                      minimum: 0
                      example: 10
      responses:
        200:
          description: Successfully updated
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Entity or subentity not found.
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      tags:
        - Inventories
      x-internal: true
      responses:
        204:
          description: Sucessfully deleted cumulated reservation
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/cumulatedInventoryReservations/{salesOrderNumber}/settle:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - name: salesOrderNumber
        in: path
        type: string
        required: true
    post:
      tags:
        - Inventories
      x-internal: true
      responses:
        200:
          description: Successfully settled
          schema:
            $ref: '#/definitions/AdditionResponse'
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Entity or subentity not found.
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/exportSettings:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - $ref: '#/parameters/CatalogCode'
    post:
      tags:
        - Exports
      operationId: setExportSettings
      summary: Set export settings
      description: This endpoint sets exports settings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - exportSettings
            properties:
              exportSettings:
                $ref: '#/definitions/CatalogSettingsInput'
          x-examples:
            setExportSettings:
              exportSettings:
                googleLocalInventory:
                  inventoryExport:
                    status: active
                    timeType: time
                    timeValue: '12:00'
                    maxExportQuantity: 5
                  password: sftp-pass
                  pickupLinkSubfeed:
                    mobilePickupLinkTemplate: https://shop.curbside.shopgate.com/item/{{bin2hex
                      product.code}}
                    pickupLinkTemplate: "{{product.deeplinkUrl}}?store={store_code}"
                    pickupSLA: same day
                    status: active
                    timeType: time
                    timeValue: '12:00'
                  productExport:
                    status: active
                    timeType: cron
                    timeValue: 4 5 * * *
                    productLinkTemplate: "{{product.deeplinkUrl}}?store={store_code}"
                  username: sftp-user
                  productIdentifier: productCode
      responses:
        204:
          description: Set catalog settings.
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    get:
      tags:
        - Exports
      operationId: getExportSettings
      summary: Get export settings
      description: Returns a list of export settings
      responses:
        200:
          description: Returns value for a given catalog code and setting key.
          schema:
            type: object
            properties:
              exportSettings:
                $ref: '#/definitions/CatalogSettingsOutput'
          examples:
            getExportSettings:
              exportSettings:
                googleLocalInventory:
                  inventoryExport:
                    cronPattern: 00 12 * * *
                    status: active
                    timeType: time
                    timeValue: '12:00'
                    maxExportQuantity: 5
                  password: sftp-pass
                  pickupLinkSubfeed:
                    cronPattern: 00 12 * * *
                    mobilePickupLinkTemplate: https://shop.curbside.shopgate.com/item/{{bin2hex
                      product.code}}
                    pickupLinkTemplate: "{{product.deeplinkUrl}}?store={store_code}"
                    pickupSLA: same day
                    status: active
                    timeType: time
                    timeValue: '12:00'
                  productExport:
                    cronPattern: 4 5 * * *
                    status: active
                    timeType: cron
                    timeValue: 4 5 * * *
                  username: sftp-user
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/exportSettings/{key}:
    parameters:
      - name: merchantCode
        in: path
        type: string
        required: true
      - $ref: '#/parameters/CatalogCode'
      - name: key
        in: path
        type: string
        required: true
        description: The key of the setting to be retrieved, e.g. "googleLocalInventory".
    get:
      operationId: getExportSettingsKeyValue
      summary: Get export settings key value
      description: Get export settings key value
      tags:
        - Exports
      responses:
        200:
          description: Returns value for a given catalog code and setting key.
          schema:
            type: object
            properties:
              exportSetting:
                description: The setting's value, e.g. a value for key "googleLocalInventory".
                type:
                  - object
                  - "null"
                example: {
                  "password": "sftp-pass",
                  "username": "sftp-user",
                  "productExport": {
                    "status": "active",
                    "timeType": "cron",
                    "timeValue": "4 5 * * *",
                    "cronPattern": "4 5 * * *"
                  },
                  "inventoryExport": {
                    "status": "active",
                    "timeType": "time",
                    "timeValue": "12:00",
                    "cronPattern": "00 12 * * *",
                    "maxExportQuantity": 5
                  }
                }
          examples:
            getExportSettingsKeyValue:
              exportSetting: {
                  "password": "sftp-pass",
                  "username": "sftp-user",
                  "productExport": {
                    "status": "active",
                    "timeType": "cron",
                    "timeValue": "4 5 * * *",
                    "cronPattern": "4 5 * * *"
                  },
                  "inventoryExport": {
                    "status": "active",
                    "timeType": "time",
                    "timeValue": "12:00",
                    "cronPattern": "00 12 * * *",
                    "maxExportQuantity": 5
                  }
                }
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
  /merchants/{merchantCode}/inventoryTreatmentSettings:
    parameters:
      - $ref: '#/parameters/MerchantCode'
    get:
      operationId: getInventoryTreatmentSettings
      summary: Get inventory treatment settings
      description: Get inventory treatment settings
      tags:
        - InventoryTreatmentSettings
      responses:
        '200':
          description: Return inventory treatment settings
          schema:
            type: object
            properties:
              inventoryTreatmentSettings:
                type: array
                items:
                  $ref: '#/definitions/InventoryTreatmentSetting'
          examples:
            getInventoryTreatmentSettings:
              inventoryTreatmentSettings:
                - code: its1
                  name: 'not localized name of the inventory treatment settings'
                  isPurchasable: false
                  sequenceId: 1
    post:
      operationId: createInventoryTreatmentSettings
      summary: Create inventory treatment settings
      description: Create inventory treatment settings
      tags:
        - InventoryTreatmentSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            required:
              - inventoryTreatmentSettings
            properties:
              inventoryTreatmentSettings:
                type: array
                minItems: 1
                items:
                  $ref: '#/definitions/InventoryTreatmentSettingCreate'
          x-examples:
            createInventoryTreatmentSettings:
              inventoryTreatmentSettings:
                - code: its1
                  name: 'not localized name of the inventory treatment settings'
                  isPurchasable: false
                  sequenceId: 10
      responses:
        '201':
          description: ''
          schema:
            type: object
            allOf:
              - $ref: '#/definitions/BatchErrors'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
  /merchants/{merchantCode}/inventoryTreatmentSettings/{inventoryTreatmentSettingCode}:
    parameters:
      - $ref: '#/parameters/MerchantCode'
      - $ref: '#/parameters/InventoryTreatmentSettingCode'
    post:
      operationId: updateInventoryTreatmentSetting
      summary: Update inventory treatment setting
      description: Update inventory treatment setting
      tags:
        - InventoryTreatmentSettings
      parameters:
        - in: body
          name: body
          required: true
          schema:
            type: object
            additionalProperties: false
            properties:
              name:
                type: string
              isPurchasable:
                type: boolean
              sequenceId:
                type: integer
                minimum: 0
          x-example:
            updateInventoryTreatmentSetting:
              name: 'new setting name'
              isPurchasable: true
              sequenceId: 1
      responses:
        '204':
          description: 'Inventory treatment setting updated'
        '404':
          description: 'Merchant or inventory treatment setting not found'
        '409':
          description: Conflict Error
    delete:
      operationId: deleteInventoryTreatmentSetting
      summary: Delete inventory treatment setting
      description: Delete inventory treatment setting
      tags:
        - InventoryTreatmentSettings
      responses:
        '200':
          description: 'Inventory treatment setting deleted'
        '404':
          description: 'Merchant or inventory treatment setting not found'

  /merchants/{merchantCode}/syncWebhooks:
    get:
      x-internal: true
      tags:
        - SyncWebhooks
      operationId: getSyncWebhooks
      summary: Get sync webhooks
      description: Get sync webhooks
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - in: query
          name: filters
          type: string
          description: Allowed filter is `code`
      responses:
        200:
          description: Returns sync webhooks
          schema:
            type: object
            properties:
              syncWebhooks:
                type: array
                items:
                  $ref: '#/definitions/SyncWebhookFull'
          examples:
            getSyncWebhooks:
              syncWebhooks:
                - id: 123e4567-e89b-12d3-a456-426614174000
                  code: loginSync
                  name: customer login sync
                  endpoint: https://your-service.url
                  status: active
                  events:
                    - code: loginSync
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'
    post:
      x-internal: true
      tags:
        - SyncWebhooks
      operationId: createSyncWebhooks
      summary: Create sync webhooks
      description: Register new sync webhooks
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/SyncWebhookCreate'
      responses:
        200:
          description: Invalid request
          schema:
            type: object
            properties:
              errors:
                $ref: '#/definitions/ErrorList'
          examples:
            createSyncWebhooks:
              errors:
                - code: 409
                  entity: syncWebhook
                  entityId: loginSync
                  entityIndex: 0
                  reason: SyncWebhook with code 'loginSync' already exists
                  subentityPath: []
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant not found
          schema:
            $ref: '#/definitions/NotFoundError'

  /merchants/{merchantCode}/syncWebhooks/{syncWebhookCode}:
    post:
      x-internal: true
      tags:
        - SyncWebhooks
      operationId: updateSyncWebhook
      summary: Update sync webhook
      description: Update sync webhook
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/SyncWebhookCode'
        - $ref: '#/parameters/SyncWebhookUpdate'
      responses:
        204:
          description: Update successful
        400:
          description: Validation error
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or Sync Webhook not found
          schema:
            $ref: '#/definitions/NotFoundError'
    delete:
      x-internal: true
      tags:
        - SyncWebhooks
      operationId: deleteSyncWebhook
      summary: Delete sync webhook
      description: Delete sync webhook
      parameters:
        - $ref: '#/parameters/MerchantCode'
        - $ref: '#/parameters/SyncWebhookCode'
      responses:
        204:
          description: Delete successful
        400:
          description: Invalid request
          schema:
            $ref: '#/definitions/ValidationError'
        404:
          description: Merchant or Sync Webhook not found
          schema:
            $ref: '#/definitions/NotFoundError'

parameters:
  CatalogCodeInPath:
    in: path
    name: catalogCode
    type: string
    required: true
    maxLength: 255
  CatalogCode:
    in: query
    name: catalogCode
    type: string
    maxLength: 255
  Fields:
    in: query
    name: fields
    type: string
    format: csv
    description: Fields which should be included in the response. This field is optional. If the field is not set the default fields will be shown
  CurrencyCode:
    in: query
    name: currencyCode
    type: string
    enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWL
  LocaleCode:
    in: query
    name: localeCode
    description: Locale code to change the language of the name, descriptions, properties and media
    type: string
    maxLength: 5
  LocationCode:
    in: query
    name: locationCode
    description: Location code used to determine product availability
    type: string
    maxLength: 255
  MerchantCode:
    name: merchantCode
    in: path
    type: string
    required: true
    maxLength: 255
  AttributeCode:
    name: attributeCode
    in: path
    type: string
    required: true
    maxLength: 255
  AttributeValueCode:
    name: attributeValueCode
    in: path
    type: string
    required: true
    maxLength: 255
  ProductCode:
    name: productCode
    in: path
    type: string
    required: true
    maxLength: 255
  CategoryCode:
    name: categoryCode
    in: path
    type: string
    required: true
    maxLength: 255
  ExportId:
    name: exportId
    in: path
    type: number
    required: true
  Force:
    name: force
    in: query
    type: boolean
    default: false
  OriginalImages:
    name: getOriginalImageUrls
    in: query
    type: boolean
    default: false
  OmitTotalItemCount:
    description: Omit totalItemCount from meta object
    in: query
    name: omitTotalItemCount
    type: boolean
    default: false
  PaginationLimit:
    description: the limit of entries of one page
    in: query
    name: limit
    type: integer
    default: 1000
    minimum: 1
    maximum: 1000
  PaginationOffset:
    description: the offset where to start the page
    in: query
    name: offset
    type: integer
    default: 0
    minimum: 0
  PaginationAfter:
    description: the cursor after which the next entries will be queried; on routes supporting limit/offset and cursor
                 pagination, `offset` will be ignored when `after` is set
    in: query
    name: after
    type: string
  Sort:
    description: sorting of the products (sequenceId only works with filter catalogCode)
    in: query
    name: sort
    type: string
  ReservationCode:
    name: reservationCode
    in: path
    type: string
    required: true
    minLength: 36
    maxLength: 36
  InventoryTreatmentSettingCode:
    name: inventoryTreatmentSettingCode
    in: path
    type: string
    required: true
    maxLength: 255

  # SyncWebhook
  SyncWebhookCreate:
    in: body
    name: body
    required: true
    schema:
      type: object
      required:
        - syncWebhooks
      properties:
        syncWebhooks:
          type: array
          minItems: 1
          items:
            $ref: '#/definitions/SyncWebhookCreate'
    x-examples:
      createSyncWebhooks:
        syncWebhooks:
          - code: getProductsSync
            name: getProductsSync
            endpoint: https://your-service.url
            status: active
            events:
              - code: getProductsSync
  SyncWebhookUpdate:
    in: body
    name: body
    required: true
    schema:
      $ref: '#/definitions/SyncWebhookUpdate'
    x-examples:
      updateSyncWebhook:
        name: getProductsSync
        endpoint: https://your-service.url
        status: active
        events:
          - code: getProductsSync
  SyncWebhook:
    in: body
    name: body
    required: true
    schema:
      $ref: '#/definitions/SyncWebhookFull'
  EventCode:
    name: eventCode
    in: path
    type: string
    required: true
    maxLength: 255
  SyncWebhookCode:
    name: syncWebhookCode
    in: path
    type: string
    required: true
    maxLength: 255

definitions:
  Attribute:
    type: object
    properties:
      code:
        $ref: '#/definitions/AttributeCode'
      type:
        $ref: '#/definitions/AttributeType'
      use:
        $ref: '#/definitions/AttributeUse'
      name:
        $ref: '#/definitions/AttributeName'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      values:
        type: array
        items:
          $ref: '#/definitions/AttributeValue'
  AttributeCode:
    type: string
    maxLength: 255
    example: color
  AttributeCreate:
    type: object
    required:
      - code
      - type
      - use
      - name
      # - values
    properties:
      code:
        $ref: '#/definitions/AttributeCode'
      type:
        $ref: '#/definitions/AttributeType'
      use:
        $ref: '#/definitions/AttributeUse'
      name:
        $ref: '#/definitions/LocalizationShort'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      values:
        type: array
        maxItems: 5000
        items:
          $ref: '#/definitions/AttributeValueCreate'
  AttributeName:
    type: string
    description: Name of the attribute which will be shown to the customer. It's saved in the language of the passed locale.
    maxLength: 255
    example: Color
  AttributeType:
    description: Type of the attribute. It specifies which type the attribute value will have.
    type: string
    enum:
      - text
      - productList
      - input
      - number
    example:
      text
  AttributeUpdate:
    type: object
    properties:
      type:
        $ref: '#/definitions/AttributeType'
      use:
        $ref: '#/definitions/AttributeUse'
      name:
        $ref: '#/definitions/LocalizationShort'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      values:
        type: array
        maxItems: 5000
        items:
          $ref: '#/definitions/AttributeValueUpdateInList'
  AttributeUse:
    description: The usage of this attribute
    type: string
    enum:
      - option
      - extra
      - property
    example:
      option
  AttributeValue:
    type: object
    required:
      - code
      - sequenceId
      - name
    properties:
      code:
        $ref: '#/definitions/AttributeValueCode'
      sequenceId:
        $ref: '#/definitions/AttributeValueSequenceId'
      name:
        $ref: '#/definitions/AttributeValueName'
      swatch:
        $ref: '#/definitions/Swatch'
  AttributeValueCode:
    description: Unique identifier for the attribute value
    type: string
    example: black
    maxLength: 255
  AttributeValueCreate:
    type: object
    required:
      - code
      - sequenceId
      - name
    properties:
      code:
        $ref: '#/definitions/AttributeValueCode'
      sequenceId:
        $ref: '#/definitions/AttributeValueSequenceId'
      name:
        $ref: '#/definitions/LocalizationShort'
      swatch:
        $ref: '#/definitions/Swatch'
  AttributeValueUpdateInList:
    type: object
    required:
      - code
    properties:
      code:
        $ref: '#/definitions/AttributeValueCode'
      sequenceId:
        $ref: '#/definitions/AttributeValueSequenceId'
      name:
        $ref: '#/definitions/LocalizationShort'
      swatch:
        $ref: '#/definitions/Swatch'
  AttributeValueName:
    description: Name of the attribute value which will be shown to the customer. It's saved in the language of the passed locale.
    type: string
    maxLength: 255
    example: Black
  AttributeValueSequenceId:
    description: Sequence id of the order of the values. The lowest number is at the top and the highest number is at the botton.
    type: number
    example: 1
  AttributeValueUpdate:
    type: object
    required:
      - sequenceId
      - name
    properties:
      sequenceId:
        $ref: '#/definitions/AttributeValueSequenceId'
      name:
        $ref: '#/definitions/LocalizationShort'
      swatch:
        $ref: '#/definitions/Swatch'
  Bin:
    type:
      - "null"
      - string
    example: "1203"
    maxLength: 100
    description: Bin. (Location in warehouse)
  BinLocation:
    type:
      - "null"
      - string
    example: "1203-4"
    maxLength: 100
    description: Bin location.
  CatalogBase:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
        example: defaultCatalog
      name:
        type: string
        maxLength: 255
        example: Default Catalog
      defaultLocaleCode:
        type: string
        maxLength: 5
        default: en-us
        example: en-us
      defaultCurrencyCode:
        type: string
        maxLength: 3
        default: USD
        example: USD
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
        example: "2018-12-15T00:00:23.114Z"
      isDefault:
        type: boolean
        default: false
      parentCatalogCode:
        type:
          - "null"
          - string
  CatalogCreate:
    required:
      - code
      - name
    allOf:
      - $ref: '#/definitions/CatalogBase'
  CatalogUpdate:
    type: object
    additionalProperties: false
    properties:
      parentCatalogCode:
        $ref: '#/definitions/Code'
        example: parentCatalog
      name:
        type: string
        maxLength: 255
        example: Catalog 1
      defaultLocaleCode:
        type: string
        maxLength: 5
        default: en-us
        example: en-us
      defaultCurrencyCode:
        type: string
        maxLength: 3
        default: USD
        example: USD
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      isDefault:
        type: boolean
        default: false
  CategoriesMappingCreate:
    type: array
    items:
      $ref: '#/definitions/CategoryMappingCreate'
  CategoriesResolved:
    type: array
    items:
      $ref: '#/definitions/CategoryMapping'
  Category:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
      parentCategoryCode:
        $ref: '#/definitions/Code'
      image:
        type:
          - "null"
          - string
        maxLength: 255
        example: https://some.url
      name:
        type: string
        maxLength: 255
        example: Category 1
      url:
        type:
          - "null"
          - string
        maxLength: 255
        description: Url of the category in the desktop shop
        example: https://some.url
      description:
        type:
          - "null"
          - string
        description: Description which is shown to the costumer
        example: This is our very first category
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      status:
        type: string
        enum:
          - active
          - inactive
        example: active
      path:
        type: array
        description: Category path based on the category code of the parents
        items:
          type: string
        example: ["firstLevelCategory", "secondLevelCategory", "thridLevelCategory"]
      sequenceId:
        type: integer
        example: 1
        description: By default this creates an ascending order of categories meaning 0 is the first.
      productCount:
        type: integer
        example: 1        
      categoryCount:
        type: integer
        example: 1
    example:
      code: jeans
      parentCategoryCode: men
      catalogCode: US
      image: https://awesomeShop.com/img/jeans1.jpg
      name: Jeans
      description: This category contains jeans
      url: https://awesomeShop.com/c/jeans
      externalUpdateDate: "2019-01-12T00:00:00.114Z"
      status: active
      path: ["firstLevelCategory", "secondLevelCategory", "thirdLevelCategory"]
      sequenceId: 0
  CategoryCreate:
    type: object
    required:
      - code
      - name
      - sequenceId
    properties:
      code:
        $ref: '#/definitions/Code'
      parentCategoryCode:
        $ref: '#/definitions/ParentCategoryCode'
      image:
        $ref: '#/definitions/LocalizationShort'
      name:
        $ref: '#/definitions/LocalizationShort'
      url:
        $ref: '#/definitions/LocalizationShort'
      sequenceId:
        type: integer
        example: 1
        description: By default this creates an ascending order of categories meaning 0 is the first.
      description:
        $ref: '#/definitions/Localization'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      status:
        type: string
        enum:
          - active
          - inactive
  CategoryMapping:
    type: object
    properties:
      code:
        type: string
        example: "123"
        maxLength: 255
      categoryName:
        type: string
        example: "Awesome category"
        maxLength: 255
      path:
        type: array
        items:
          type: string
        example: ["firstLevelCategory", "secondLevelCategory", "thridLevelCategory"]
      sequenceId:
        type: number
        description: Id of the sequence of the product in the category. The lowest number is at the top and the highest number is at the botton.
        example: 1
      isPrimary:
        type: boolean
        example: true
  CategoryMappingCreate:
    type: object
    required:
      - code
    properties:
      code:
        type: string
        example: "123"
        maxLength: 255
      isPrimary:
        type: boolean
        example: true
      sequenceId:
        type: number
        description: Id of the sequence of the product in the category. The lowest number is at the top and the highest number is at the botton.
        example: 1
  CategoryUpdate:
    type: object
    properties:
      image:
        $ref: '#/definitions/LocalizationShort'
      name:
        $ref: '#/definitions/LocalizationShort'
      parentCategoryCode:
        $ref: '#/definitions/ParentCategoryCode'
      url:
        $ref: '#/definitions/LocalizationShort'
        description: Url of the category in the desktop shop
      sequenceId:
        type: integer
        example: 1
      description:
        $ref: '#/definitions/LocalizationDescription'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      status:
        type: string
        enum:
          - active
          - inactive
        example: active
  Code:
    type: string
    description: Human readable code of the entity
    example: "someCode"
    minLength: 1
    maxLength: 255
  EndDate:
    type:
      - "null"
      - string
    format: date-time
    example: "2018-12-01T00:00:00.114Z"
    description: End date when the product should no longer be visible (switch to the "inactive" status)
  EOLDate:
    type:
      - "null"
      - string
    format: date-time
    example: "2018-12-01T00:00:00.114Z"
    description: Date when the product is no longer buyable (marketing use cases)
  CsvExportOptions:
    type: object
    required:
      - entity
    properties:
      entity:
        type: string
        enum:
          - product
          - category
        example: product
      withHeader:
        type: boolean
        description: Whether the CSV file contains a header line with column headers. Defaults to true.
        example: true
      delimiter:
        type: string
        description: The delimiter between columns in the file. Defaults to ",".
        example: ","
      enclosure:
        type: string
        description: The enclosure around values in the CSV file. Defaults to double-quotes (""").
        example: '"'
      escape:
        type: string
        description: The escape character within values. Defaults to double-quotes (""").
        example: '"'
    example:
      entity: product
      withHeader: true
      delimiter: ','
      enclosure: '"'
      escape: '"'
  GoogleExportOptions:
    type: object
    required:
      - feed
    properties:
      feed:
        $ref: '#/definitions/GoogleExportFeed'
  ExternalUpdateDate:
    type:
      - "null"
      - string
    format: date-time
    example: "2018-12-15T00:00:23.114Z"
  FirstAvailableDate:
    type:
      - "null"
      - string
    format: date-time
    example: "2018-12-01T00:00:00.114Z"
    description: Date when the product is buyable (marketing use cases)
  FulfillmentMethods:
    type: array
    items:
      type: string
      example: simplePickUpInStore
    example:
      - simplePickUpInStore
    # NOTE: validation? this maps to a single string in the database
  GoogleExport:
    type: object
    properties:
      feed:
        $ref: '#/definitions/GoogleExportFeed'
      status:
        $ref: '#/definitions/GoogleExportStatus'
      entityCount:
        type: number
        example: 74327
      errorMessage:
        type:
          - "null"
          - string
        example: Upload failed
      startDate:
        type:
          - string
        format: date-time
        example: "2018-12-15T00:00:23.114Z"
      endDate:
        type:
          - "null"
          - string
        format: date-time
        example: "2018-12-15T00:00:23.114Z"
  GoogleExportFeed:
    type: string
    enum:
      - product
      - inventory
      - pickupLinkSubfeed
    example: product
  GoogleExportStatus:
    type: string
    enum:
      - processing
      - succeeded
      - failed
    example: processing
  Inventory:
    type: object
    properties:
      productCode:
        $ref: '#/definitions/Code'
      locationCode:
        $ref: '#/definitions/LocationCode'
      sku:
        type:
          - "null"
          - string
        description: Stock keeping unit
        example: 54nf444
        maxLength: 255
      onHand:
        type: number
        example: 100
      onReserve:
        type: number
        example: 5
      safetyStock:
        type: number
        example: 10
      available:
        type: number
        description: Available stock (onHand - onReserve)
        example: 95
      visible:
        type: number
        description: Visible stock in store (available - safetyStock)
        example: 85
      bin:
        $ref: '#/definitions/Bin'
      binLocation:
        $ref: '#/definitions/BinLocation'
      status:
        type: string
        enum:
          - 'active'
          - 'inactive'
        example: active
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      inventoryTreatmentSetting:
        $ref: '#/definitions/InventoryTreatmentSetting'
  InventoryPost:
    type: object
    required:
      - productCode
      - locationCode
      - sku
    properties:
      productCode:
        $ref: '#/definitions/Code'
      locationCode:
        $ref: '#/definitions/LocationCode'
      inventoryTreatmentSetting:
        $ref: '#/definitions/InventoryTreatmentSettingUpdate'
      sku:
        type:
          - "null"
          - string
        description: Stock keeping unit
        example: 54nf444
        maxLength: 255
      onHand:
        type:
          - "null"
          - number
        example: 4
      safetyStock:
        type:
          - "null"
          - number
        example: 1
      bin:
        $ref: '#/definitions/Bin'
      binLocation:
        $ref: '#/definitions/BinLocation'
      status:
        type: string
        enum:
          - 'active'
          - 'inactive'
        example: active
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
  InventoryCompare:
    type: object
    required:
      - productCode
      - locationCode
      - sku
    properties:
      productCode:
        $ref: '#/definitions/Code'
      sku:
        type:
          - "null"
          - string
        maxLength: 255
      locationCode:
        $ref: '#/definitions/LocationCode'
      bin:
        $ref: '#/definitions/Bin'
      binLocation:
        $ref: '#/definitions/BinLocation'
  InventoryTreatment:
    type:
      - "null"
      - string
    enum:
      - showOutOfStock
      - allowBackOrders
      - preOrder
      - hideInStorefront
    example: showOutOfStock
  InventoryTreatmentSettingCreate:
    type: object
    required:
      - code
      - name
      - isPurchasable
      - sequenceId
    properties:
      code:
        type: string
        example: its1
      name:
        type: string
        example: setting name
      isPurchasable:
        type: boolean
      sequenceId:
        type: integer
        minimum: 0
  InventoryTreatmentSetting:
    type: [object, 'null']
    required:
      - code
      - name
      - isPurchasable
    properties:
      code:
        type: string
        example: its1
      name:
        type: string
        example: setting name
      isPurchasable:
        type: boolean
      sequenceId:
        type: integer
        minimum: 0
  InventoryTreatmentSettingUpdate:
    type: [object, 'null']
    required:
      - code
    additionalProperties: false
    properties:
      code:
        type: [string, 'null']
        example: its1
  IsInventoryManaged:
    type: boolean
    example: true
  IsSerialized:
    type: boolean
    description: Indicates if a product has serial numbers
    example: true
  IsTaxed:
    type: boolean
    example: true
    default: true
  Localization:
    type: object
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    additionalProperties:
      type: string
      maxLength: 255
    example:
      en-us: "string in english"
      de-de: "Zeichenkette auf Deutsch"
  LocalizationShort:
    type: object
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    additionalProperties:
      type: string
      minLength: 1
      maxLength: 255
    example:
      en-us: "string in english"
      de-de: "Zeichenkette auf Deutsch"
  OptionalLocalization:
    type: object
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    additionalProperties:
      type:
        - "null"
        - string
    example:
      en-us: "string in english"
      de-de: "Zeichenkette auf Deutsch"
  OptionalLocalizationShort:
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    type: object
    additionalProperties:
      type:
        - "null"
        - string
      maxLength: 255
    example:
      en-us: "string in english"
      de-de: "Zeichenkette auf Deutsch"
  LocalizationDescription:
    $ref: '#/definitions/Localization'
  LocalizationDescriptionLong:
    type: object
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    additionalProperties:
      type: string
      maxLength: 64000
    example:
      en-us: "string in english"
      de-de: "Zeichenkette auf Deutsch"
  LocalizationMedia:
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information. We support type image, video, or pdf. In case of type video, we currently support vimeo and youtube urls
    type: object
    additionalProperties:
      type: array
      items:
        $ref: '#/definitions/Media'
    example:
      en-us:
        - code: "gdt5-c"
          url: "https://myAwesomeShop.com/image01.jpg"
          type: "image"
          altText: "a translated string"
          title: "a translated string"
          sequenceId: 1
  LocalizationValue: # NOTE: What values
    description: Localization object, see [Entity Localization](/docs/retail-red/ZG9jOjM1NjU0NzY4-concepts-and-entities#entity-localization) for further information.
    additionalProperties: true
    example:
      de-de:
        null: 'null'
      en-us:
        null: 'null'
  LocationCode:
    type: string
    maxLength: 36
    example: DERetail1
  LocationInventory:
    type: object
    properties:
      locationId:
        type: string
        example: 550e8400-e29b-11d4-a716-446655440000
        maxLength: 36
      productCode:
        $ref: '#/definitions/ProductCode'
      inventoryVisible:
        type: number
        example: 200
      inventoryTreatmentSetting:
        $ref: '#/definitions/InventoryTreatmentSetting'
  LocationInventoryExtended:
    type: object
    properties:
      productCode:
        $ref: '#/definitions/Code'
      locationCode:
        $ref: '#/definitions/Code'
      inventoryTreatmentSetting:
        $ref: '#/definitions/InventoryTreatmentSetting'
      onHand:
        type: number
        example: 300
      onReserve:
        type: number
        example: 50
      available:
        type: number
        example: 250
      safetyStock:
        type: number
        example: 50
      visible:
        type: number
        example: 200
  LongNameResolved:
    type: string
    description: Long name of the product
    example: Petrie Mid-Century Sofa with Special Extras
    maxLength: 255
  MapPricing:
    type: object
    required:
      - price
    properties:
      startDate:
        type:
          - "null"
          - string
        format: date-time
        example: "2018-12-12T14:27:23.114Z"
      endDate:
        type:
          - "null"
          - string
        format: date-time
        example: "2018-12-15T00:00:23.114Z"
      price:
        type: number
        example: 10.1
  MaxQty:
    type:
      - "null"
      - number
    description: Maximal amount of product that could be purchased at a single time
    example: 5
  Media:
    required:
      - url
      - type
    type: object
    properties:
      code:
        type: string
        description: External code of the image
        example: gdt5-c
        maxLength: 255
      url:
        type: string
        example: https://myAwesomeShop.com/image01.jpg
        maxLength: 255
      type:
        type: string
        description: In case of type video, we currently support vimeo and youtube urls
        enum:
          - image
          - video
          - pdf
        example: image
      altText:
        type:
          - "null"
          - string
        example: "a translated string"
        maxLength: 1000
      title:
        type:
          - "null"
          - string
        example: "a translated string"
        maxLength: 255
      sequenceId:
        type:
          - "null"
          - number
        description: sequence of the media, by default this creates an ascending order meaning 0 is the first.
        example: 1
  MediaResolved:
    type: array
    items:
      $ref: '#/definitions/Media'
  MinQty:
    type:
      - "null"
      - number
    description: Minimal amount of product that could be purchased at a single time
    example: 2
  ModelType:
    description: Product Model Type
    type: string
    enum:
      - standard
      - configurable
      - bundle
      - bundleItem
      - variant
    example: standard
  NameResolved:
    description: Short name of the product
    type: string
    example: Petrie Mid-Century Sofa
    maxLength: 255
  Pagination:
    type: object
    properties:
      limit:
        type: number
      offset:
        type: number
      totalItemCount:
        type: number
    example:
      limit: 10
      offset: 0
      totalItemCount: 1
  PaginationCursor:
    type: object
    properties:
      limit:
        type: number
      cursors:
        type: object
        properties:
          after:
            type: string
      totalItemCount:
        type: number
    example:
      limit: 1
      cursor:
        after: 1b
      totalItemCount: 2
  PaginationCursorOrOffset:
    type: object
    description: on routes supporting limit/offset and cursor pagination, `offset` will be ignored when `after` is set;
                 however, both fields will always be present in the response
    properties:
      limit:
        type: number
      offset:
        type: number
      cursors:
        type: object
        properties:
          after:
            type: string
        description: a base64 string or null if the result is empty
      totalItemCount:
        type: number
    example:
      limit: 1
      cursor:
        after: 1b
      totalItemCount: 2
  ParentCatalogCreate:
    type: object
    required:
      - code
      - name
    properties:
      code:
        $ref: '#/definitions/Code'
      name:
        type: string
        maxLength: 255
        example: ParentOfShop1
      isDefault:
        type: boolean
        default: false
      defaultLocaleCode:
        type: string
        maxLength: 5
        default: en-us
        example: en-us
      defaultCurrencyCode:
        type: string
        maxLength: 3
        default: USD
        example: USD
    example:
      code: ppc1
      name: Parent Property 1
      isDefault: true
      defaultLocaleCode: en-us
      defaultCurrencyCode: USD
  ParentCategoryCode:
    type:
      - "null"
      - string
    minLength: 1
    maxLength: 255
    example:
      ParentCategoryA
  ParentProductCode:
    description: Code of parent product
    type:
      - "null"
      - string
    minLength: 1
    maxLength: 255
    example: '"55585"'
  PriceGet:
    allOf:
      - $ref: '#/definitions/Price'
      - type: object
        properties:
          pricePerMeasureUnit:
            type:
              - "null"
              - number
            maxLength: 50
            description: The base price per unit of the item if applicable; based on the unit / unitValue  and
              unitRefPriceUom / unitRefPriceValue fields of the product.
            example: 1.5
  Price:
    type: object
    required:
      - currencyCode
      - price
    properties:
      cost:
        type:
          - "null"
          - number
        description: "The actual cost for the merchant"
        example: 2.55
      price:
        type:
          - number
        description: "Price for the shopper"
        example: 3.5
      unit:
        type:
          - "null"
          - string
        example: kg
        description: "unit the price applies to (pieces, kg, packs)"
      salePrice:
        type:
          - "null"
          - number
        description: "Sale price"
        example: 3
      msrp:
        type:
          - "null"
          - number
        description: "manufacturer's suggested retail price"
        example: 4.5
      minPrice:
        type: number
        description: "lowest possible price (configurable product)"
        example: 3
      maxPrice:
        type: number
        description: "highest possible price (configurable product)"
        example: 7.5
      volumePricing:
        type: array
        items:
          $ref: '#/definitions/VolumePricing'
      mapPricing:
        type: array
        items:
          $ref: '#/definitions/MapPricing'
      currencyCode:
        $ref: '#/definitions/CurrencyCode'
  Product:
    type: object
    properties:
      parentProductCode:
        $ref: '#/definitions/ParentProductCode'
      modelType:
        $ref: '#/definitions/ModelType'
      identifiers:
        $ref: '#/definitions/ProductIdentifiers'
      price:
        $ref: '#/definitions/PriceGet'
      fulfillmentMethods:
        $ref: '#/definitions/FulfillmentMethods'
      unit:
        $ref: '#/definitions/Unit'
      unitValue:
        $ref: '#/definitions/UnitValue'
      unitPriceRefUom:
        $ref: '#/definitions/UnitPriceRefUom'
      unitPriceRefValue:
        $ref: '#/definitions/UnitPriceRefValue'
      hasCatchWeight:
        $ref: '#/definitions/HasCatchWeight'
      isSerialized:
        $ref: '#/definitions/IsSerialized'
      status:
        $ref: '#/definitions/Status'
      startDate:
        $ref: '#/definitions/StartDate'
      endDate:
        $ref: '#/definitions/EndDate'
      firstAvailableDate:
        $ref: '#/definitions/FirstAvailableDate'
      eolDate:
        $ref: '#/definitions/EOLDate'
      isInventoryManaged:
        $ref: '#/definitions/IsInventoryManaged'
      inventoryTreatment:
        $ref: '#/definitions/InventoryTreatment'
      shippingInformation:
        $ref: '#/definitions/ShippingInformation'
      rating:
        $ref: '#/definitions/Rating'
      url:
        $ref: '#/definitions/Url'
      isTaxed:
        $ref: '#/definitions/IsTaxed'
      taxClass:
        $ref: '#/definitions/TaxClass'
      minQty:
        $ref: '#/definitions/MinQty'
      maxQty:
        $ref: '#/definitions/MaxQty'
      code:
        $ref: '#/definitions/ProductCode'
      name:
        $ref: '#/definitions/NameResolved'
      longName:
        $ref: '#/definitions/LongNameResolved'
      categories:
        $ref: '#/definitions/CategoriesResolved'
      properties:
        $ref: '#/definitions/PropertiesResolved'
      media:
        $ref: '#/definitions/MediaResolved'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
      visibility:
        type: string
        description: Indicates if the products should be visibility for the customer. This flag is based on different condition.
        enum:
          - visible
          - hidden
        example: visible
  ProductCode:
    description: Code of the product
    type: string
    example: "55585-1"
    minLength: 1
    maxLength: 255
  ProductCreate:
    type: object
    required:
      - name
      - modelType
      - isInventoryManaged
      - code
    properties:
      name:
        $ref: '#/definitions/LocalizationShort'
      longName:
        $ref: '#/definitions/OptionalLocalizationShort'
      shortDescription:
        $ref: '#/definitions/OptionalLocalization'
      longDescription:
        $ref: '#/definitions/LocalizationDescriptionLong'
      categories:
        $ref: '#/definitions/CategoriesMappingCreate'
      properties:
        $ref: '#/definitions/ProductPropertiesCreate'
      media:
        $ref: '#/definitions/LocalizationMedia'
      options:
        $ref: '#/definitions/ProductOptionsCreate'
      extras:
        $ref: '#/definitions/ProductExtrasCreate'
      parentProductCode:
        $ref: '#/definitions/ParentProductCode'
      modelType:
        $ref: '#/definitions/ModelType'
      identifiers:
        $ref: '#/definitions/ProductIdentifiers'
      price:
        $ref: '#/definitions/Price'
      fulfillmentMethods:
        $ref: '#/definitions/FulfillmentMethods'
      unit:
        $ref: '#/definitions/Unit'
      unitValue:
        $ref: '#/definitions/UnitValue'
      unitPriceRefUom:
        $ref: '#/definitions/UnitPriceRefUom'
      unitPriceRefValue:
        $ref: '#/definitions/UnitPriceRefValue'
      hasCatchWeight:
        $ref: '#/definitions/HasCatchWeight'
      isSerialized:
        $ref: '#/definitions/IsSerialized'
      status:
        $ref: '#/definitions/Status'
      startDate:
        $ref: '#/definitions/StartDate'
      endDate:
        $ref: '#/definitions/EndDate'
      firstAvailableDate:
        $ref: '#/definitions/FirstAvailableDate'
      eolDate:
        $ref: '#/definitions/EOLDate'
      isInventoryManaged:
        $ref: '#/definitions/IsInventoryManaged'
      inventoryTreatment:
        $ref: '#/definitions/InventoryTreatment'
      shippingInformation:
        $ref: '#/definitions/ShippingInformation'
      rating:
        $ref: '#/definitions/Rating'
      url:
        $ref: '#/definitions/Url'
      isTaxed:
        $ref: '#/definitions/IsTaxed'
      taxClass:
        $ref: '#/definitions/TaxClass'
      minQty:
        $ref: '#/definitions/MinQty'
      maxQty:
        $ref: '#/definitions/MaxQty'
      code:
        $ref: '#/definitions/ProductCode'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
  ProductExtras:
    type: array
    items:
      type: object
      properties:
        code:
          $ref: '#/definitions/AttributeCode'
        name:
          $ref: '#/definitions/AttributeName'
        type:
          $ref: '#/definitions/AttributeType'
        values:
          type: array
          items:
            allOf:
              - $ref: '#/definitions/AttributeValue'
              - type: object
                properties:
                  additionalPrice:
                    $ref: '#/definitions/ProductOptionAdditionalPrice'
  ProductExtrasCreate:
    type: array
    items:
      type: object
      required:
        - code
      properties:
        code:
          $ref: '#/definitions/AttributeCode'
        values:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              code:
                $ref: '#/definitions/AttributeValueCode'
              additionalPrice:
                $ref: '#/definitions/ProductOptionAdditionalPrice'
  ProductIdentifiers:
    type: object
    properties:
      mfgPartNum:
        type:
          - "null"
          - string
        maxLength: 500
      upc:
        type:
          - "null"
          - string
        maxLength: 500
      ean:
        type:
          - "null"
          - string
        maxLength: 500
      isbn:
        type:
          - "null"
          - string
        maxLength: 500
      sku:
        type:
          - "null"
          - string
        maxLength: 500
      distiPartNum:
        type:
          - "null"
          - string
        maxLength: 500
  ProductOptionAdditionalPrice:
    type:
      - number
      - "null"
    description: The price which is added to the base price of the configurable product. It can be positive and negative
    example: -1.25
  ProductOptions:
    type: array
    items:
      type: object
      properties:
        code:
          $ref: '#/definitions/AttributeCode'
        name:
          $ref: '#/definitions/AttributeName'
        type:
          $ref: '#/definitions/AttributeType'
        values:
          type: array
          items:
            allOf:
              - $ref: '#/definitions/AttributeValue'
              - type: object
                properties:
                  additionalPrice:
                    $ref: '#/definitions/ProductOptionAdditionalPrice'
  ProductOptionsCreate:
    type: array
    items:
      type: object
      required:
        - code
      properties:
        code:
          $ref: '#/definitions/AttributeCode'
        values:
          type: array
          items:
            type: object
            required:
              - code
            properties:
              code:
                $ref: '#/definitions/AttributeValueCode'
              additionalPrice:
                $ref: '#/definitions/ProductOptionAdditionalPrice'
  ProductProperties:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
      name:
        type: string
        example: Color
        maxLength: 255 # artificial limit
      value:
        type: object
        example:
          key: 'value'
      type:
        type: string
        enum:
          - simple
          - attribute
          - product
          - productList
          - html
        example: simple
      displayGroup:
        type: string
        enum:
          - properties
          - features
          - general
          - pricing
          - custom
        example:
          properties
      subDisplayGroup:
        type: string
        example: Overall Dimensions
        maxLength: 255 # artificial limit
      customDisplayGroupName:
        type: ["null", string]
        example: Product Support
        maxLength: 255 # artificial limit
  ProductPropertiesCreate:
    type: array
    items:
      $ref: '#/definitions/ProductPropertyCreate'
    example:
      - code: 'abc123'
        name:
          'en-us': Color
        value:
          'en-us':
            - red
            - white
            - blue
        type: simple
        displayGroup: 'properties'
        subDisplayGroup:
          'en-us': 'Appearance'
        isPriced: true
        attributePrice: 5.5
        unit: number
      - code: 'attributeCode'
        value:
          - attributeValueCode1
          - attributeValueCode2
          - attributeValueCode3
        type: attribute
        displayGroup: 'properties'
        subDisplayGroup:
          'en-us': 'Appearance'
  ProductPropertyCreate:
    type: object
    properties:
      code:
        $ref: '#/definitions/Code'
      name:
        $ref: '#/definitions/Localization'
      value:
        $ref: '#/definitions/LocalizationValue'
      type:
        type: string
        enum:
          - simple
          - attribute
          - product
          - productList
          - html
        example: simple
      displayGroup:
        type: string
        enum:
          - properties
          - features
          - general
          - pricing
          - custom
        example: properties
      subDisplayGroup:
        $ref: '#/definitions/Localization'
      customDisplayGroupName:
        $ref: '#/definitions/OptionalLocalization'
  ProductUpdate:
    type: object
    additionalProperties: false
    properties:
      name:
        $ref: '#/definitions/LocalizationShort'
      longName:
        $ref: '#/definitions/OptionalLocalizationShort'
      shortDescription:
        $ref: '#/definitions/OptionalLocalization'
      longDescription:
        $ref: '#/definitions/LocalizationDescriptionLong'
      categories:
        $ref: '#/definitions/CategoriesMappingCreate'
      properties:
        $ref: '#/definitions/ProductPropertiesCreate'
      media:
        $ref: '#/definitions/LocalizationMedia'
      options:
        $ref: '#/definitions/ProductOptionsCreate'
      extras:
        $ref: '#/definitions/ProductExtrasCreate'
      parentProductCode:
        $ref: '#/definitions/ParentProductCode'
      modelType:
        $ref: '#/definitions/ModelType'
      identifiers:
        $ref: '#/definitions/ProductIdentifiers'
      price:
        $ref: '#/definitions/Price'
      fulfillmentMethods:
        $ref: '#/definitions/FulfillmentMethods'
      unit:
        $ref: '#/definitions/Unit'
      unitValue:
        $ref: '#/definitions/UnitValue'
      unitPriceRefUom:
        $ref: '#/definitions/UnitPriceRefUom'
      unitPriceRefValue:
        $ref: '#/definitions/UnitPriceRefValue'
      hasCatchWeight:
        $ref: '#/definitions/HasCatchWeight'
      isSerialized:
        $ref: '#/definitions/IsSerialized'
      status:
        $ref: '#/definitions/Status'
      startDate:
        $ref: '#/definitions/StartDate'
      endDate:
        $ref: '#/definitions/EndDate'
      firstAvailableDate:
        $ref: '#/definitions/FirstAvailableDate'
      eolDate:
        $ref: '#/definitions/EOLDate'
      isInventoryManaged:
        $ref: '#/definitions/IsInventoryManaged'
      inventoryTreatment:
        $ref: '#/definitions/InventoryTreatment'
      shippingInformation:
        $ref: '#/definitions/ShippingInformation'
      rating:
        $ref: '#/definitions/Rating'
      url:
        $ref: '#/definitions/Url'
      isTaxed:
        $ref: '#/definitions/IsTaxed'
      taxClass:
        $ref: '#/definitions/TaxClass'
      minQty:
        $ref: '#/definitions/MinQty'
      maxQty:
        $ref: '#/definitions/MaxQty'
      externalUpdateDate:
        $ref: '#/definitions/ExternalUpdateDate'
  PropertiesResolved:
    type: array
    items:
      $ref: '#/definitions/ProductProperties'
  Rating:
    type:
      - "null"
      - number
    description: Ratings from (1-5). To save fractions of a rating, pass in e.g. 0.5 for a "1/2 star" representation.
    example: 5
  Reservation:
    type: object
    required:
      - code
      - productCode
      - locationCode
      - salesOrderNumber
      - quantity
      - salesOrderLineItemCode
    properties:
      code:
        type: string
        example: 1278ab38-f5ad-488f-abf5-e834239e45a1
        maxLength: 36
      productCode:
        type: string
        example: productCode1
        maxLength: 255
      locationCode:
        $ref: '#/definitions/LocationCode'
      sku:
        type:
          - "null"
          - string
        example: SKU-1
        maxLength: 255
      salesOrderLineItemCode:
        type: string
        example: someCode
        maxLength: 100
      fulfillmentOrderLineItemId:
        type: number
        example: 1
        maxLength: 20
      salesOrderNumber:
        type: string
        example: someCode
      fulfillmentOrderNumber:
        type: string
        example: someCode
      bin:
        $ref: '#/definitions/Bin'
      binLocation:
        $ref: '#/definitions/BinLocation'
      quantity:
        type: number
        example: 1
      createDate:
        type: string
        format: date-time
        example: "2018-12-15T00:00:23.114Z"
  ReservationCreate:
    type: object
    required:
      - productCode
      - locationCode
      - sku
      - salesOrderNumber
      - quantity
      - salesOrderLineItemCode
    properties:
      productCode:
        type: string
        example: productCode1
        maxLength: 255
      locationCode:
        $ref: '#/definitions/LocationCode'
      sku:
        type:
          - "null"
          - string
        example: SKU-1
        maxLength: 255
      salesOrderLineItemCode:
        type: string
        example: someCode
        maxLength: 100
      fulfillmentOrderLineItemId:
        type: number
        example: 1
        maxLength: 20
      salesOrderNumber:
        type: string
        example: someCode
      fulfillmentOrderNumber:
        type: string
        example: someCode
      bin:
        $ref: '#/definitions/Bin'
      binLocation:
        $ref: '#/definitions/BinLocation'
      quantity:
        type: number
        example: 1
      ignoreInventory:
        description: this flag only works internally and can not be used by external clients
        x-internal: true
        type: boolean
        example: false
        default: false
  ShippingInformation:
    type: object
    properties:
      isShippedAlone:
        type: boolean
        example: true
      height:
        type:
          - "null"
          - number
        example: 1
      heightUnit:
        type:
          - "null"
          - string
        example: cm
        maxLength: 20
      width:
        type:
          - "null"
          - number
        example: 2.3
      widthUnit:
        type:
          - "null"
          - string
        example: cm
        maxLength: 20
      length:
        type:
          - "null"
          - number
        example: 4
      lengthUnit:
        type:
          - "null"
          - string
        example: cm
        maxLength: 20
      weight:
        type:
          - "null"
          - number
        example: 5
      weightUnit:
        type:
          - "null"
          - string
        example: kg
        maxLength: 20
  StartDate:
    type:
      - "null"
      - string
    format: date-time
    example: "2018-12-01T00:00:00.114Z"
    description: Start date when the product should be visible (switch to the "active" status)
  Status:
    type: string
    example: "active"
    default: "active"
    description: "'scheduled' is depricated and should not be used anymore."
    enum:
      - active
      - inactive
      - scheduled
  Swatch:
    type: object
    properties:
      type:
        type: string
        enum:
          - image
          - color
      value:
        type: string
        example: "https://some.url || #123456"
    example:
      type: image
      value: https://some.url
  TaxClass:
    type:
      - "null"
      - string
    example: "f8c5c2e9-5671-4870-8557-7659832e0e20"
    maxLength: 255
  Unit:
    type:
      - "null"
      - string
    enum:
      - null
      - mg
      - g
      - kg
      - ml
      - l
      - cm
      - m
      - m2
      - m3
      - unit
      - piece
      - each
      - oz
      - lb
      - floz
      - pt
      - qt
      - gal
      - in
      - ft
      - yd
      - ft2
    maxLength: 50
    example: g
    description: "The unit this is product is measured in."
  UnitValue:
    description: "The value of units this product represents. Example: 250, in combination with 'unit' set to 'g'
                  indicates that this product weighs 250 grams."
    type:
      - "null"
      - number
    maxLength: 50
    format: float
    example: 250
  UnitPriceRefUom:
    description: "The unit this is product is measured in for base price reference."
    type:
      - "null"
      - string
    enum:
      - null
      - mg
      - g
      - kg
      - ml
      - l
      - cm
      - m
      - m2
      - m3
      - piece
      - unit
      - each
    example: g
  UnitPriceRefValue:
    description: "The value of units this product's base price represents. Example: 100, in combination with
                  'unitPriceRefUom' set to 'g' indicates that the base price of this product is per 100 grams."
    type:
      - "null"
      - number
    maxLength: 50
    format: float
    example: 100
  HasCatchWeight:
    description: Indicates if the product has catch weight
    type:
      - "null"
      - boolean
    default: false
    example: true
  Url:
    type:
      - "null"
      - string
    example: https://myAwesomeShop.com/test
    maxLength: 255
  VolumePricing:
    type: object
    required:
      - price
      - priceType
      - minQty
      - maxQty
    properties:
      minQty:
        type:
          - "null"
          - number
        example: 1
      maxQty:
        type:
          - "null"
          - number
        example: 2
      price:
        type: number
        description: Price of the tier
        example: 6.4
      salePrice:
        type:
          - "null"
          - number
        example: 5
        description: Sale price of the tier
      unit:
        type:
          - "null"
          - string
        example: kg
        maxLength: 30 # TODO: other units have other values
      priceType:
        type: string
        enum:
          - fixed
          - relative
        example: fixed
        description: fixed price, or relative to the standard price # NOTE: relative HOW?
  CatalogSettingsOutput:
    type: object
    properties:
      googleLocalInventory:
        type:
          - object
          - "null"
        properties:
          username:
            type: string
          password:
            type: string
          productIdentifier:
            type: string
            enum:
              - productCode
              - ean
              - sku
              - upc
          productExport:
            $ref: '#/definitions/ExportOutput'
          inventoryExport:
            $ref: '#/definitions/InventoryExportOutput'
          pickupLinkSubfeed:
            $ref: '#/definitions/PickupLinkSettingsOutput'
    example: {
      "googleLocalInventory": {
        "password": "sftp-pass",
        "username": "sftp-user",
        "productExport": {
          "status": "active",
          "timeType": "cron",
          "timeValue": "4 5 * * *",
          "cronPattern": "4 5 * * *"
        },
        "inventoryExport": {
          "status": "active",
          "timeType": "time",
          "timeValue": "12:00",
          "cronPattern": "00 12 * * *",
          "maxExportQuantity": 5
        },
        "pickupLinkSubfeed": {
          "status": "active",
          "timeType": "time",
          "timeValue": "12:00",
          "cronPattern": "00 12 * * *",
          "pickupLinkTemplate": "{{product.deeplinkUrl}}?store={store_code}",
          "mobilePickupLinkTemplate": "https://shop.curbside.shopgate.com/item/{{bin2hex product.code}}",
          "pickupSLA": "same day"
        }
      }
    }
  CatalogSettingsInput:
    additionalProperties: false
    type: object
    properties:
      googleLocalInventory:
        type:
          - object
          - "null"
        required:
          - username
          - password
          - productExport
          - inventoryExport
          - pickupLinkSubfeed
        additionalProperties: false
        properties:
          username:
            type: string
          password:
            type: string
          productIdentifier:
            type: string
            enum:
              - productCode
              - ean
              - sku
              - upc
            default: productCode
          productExport:
            $ref: '#/definitions/ExportInput'
          inventoryExport:
            $ref: '#/definitions/InventoryExportInput'
          pickupLinkSubfeed:
            $ref: '#/definitions/PickupLinkSettingsInput'
    example: {
      "googleLocalInventory": {
        "password": "sftp-pass",
        "username": "sftp-user",
        "productIdentifier": "productCode",
        "productExport": {
          "status": "active",
          "timeType": "cron",
          "timeValue": "4 5 * * *",
          "productLinkTemplate": "{{product.deeplinkUrl}}?store={store_code}"
        },
        "inventoryExport": {
          "status": "active",
          "timeType": "time",
          "timeValue": "12:00",
          "maxExportQuantity": 5
        },
        "pickupLinkSubfeed": {
          "status": "active",
          "timeType": "time",
          "timeValue": "12:00",
          "pickupLinkTemplate": "{{product.deeplinkUrl}}?store={store_code}",
          "mobilePickupLinkTemplate": "https://shop.curbside.shopgate.com/item/{{bin2hex product.code}}",
          "pickupSLA": "same day"
        }
      }
    }
  PickupLinkSettingsInput:
    type: object
    required:
      - status
      - timeType
    additionalProperties: false
    properties:
      status:
        type: string
        enum:
          - active
          - inactive
      timeType:
        type: string
        enum:
          - cron
          - time
      timeValue:
        type:
          - string
          - "null"
      pickupLinkTemplate:
        type: string
      mobilePickupLinkTemplate:
        type: string
      pickupSLA:
        type: string
        enum:
          - same day
          - next day
  ExportOutput:
    type: object
    properties:
      status:
        type: string
        enum:
          - active
          - inactive
      timeType:
        type: string
        enum:
          - cron
          - time
      timeValue:
        type: string
      cronPattern:
        type: string
      productLinkTemplate:
        type: string
  InventoryExportOutput:
    allOf:
      - $ref: '#/definitions/ExportOutput'
      - type: object
        properties:
          maxExportQuantity:
            minimum: 0
            type:
              - integer
              - "null"
            example: 5
  PickupLinkSettingsOutput:
    type: object
    properties:
      status:
        type: string
        enum:
          - active
          - inactive
      timeType:
        type: string
        enum:
          - cron
          - time
      timeValue:
        type: string
      cronPattern:
        type: string
      pickupLinkTemplate:
        type: string
      mobilePickupLinkTemplate:
        type: string
      pickupSLA:
        type: string
        enum:
          - same day
          - next day
  ExportInput:
    type: object
    required:
      - status
      - timeType
    additionalProperties: false
    properties:
      status:
        type: string
        enum:
          - active
          - inactive
      timeType:
        type: string
        enum:
          - cron
          - time
      timeValue:
        type:
          - string
          - "null"
      productLinkTemplate:
        type:
          - string
          - "null"
  InventoryExportInput:
    type: object
    required:
      - status
      - timeType
    additionalProperties: false
    properties:
      status:
        type: string
        enum:
          - active
          - inactive
      timeType:
        type: string
        enum:
          - cron
          - time
      timeValue:
        type:
          - string
          - "null"
      maxExportQuantity:
        minimum: 0
        type:
          - integer
          - "null"
        example: 5

  # Default response Errors
  AdditionResponse:
    type: object
    required:
      - errors
    properties:
      errors:
        $ref: '#/definitions/ErrorList'
  Error:
    type: object
    required:
      - message
    properties:
      statusCode:
        type: number
      code:
        type: string
        description: machine readable error code
      message:
        type: string
        description: human readable error code
  ExtendedError:
    type: object
    required:
      - message
    properties:
      statusCode:
        type: number
      code:
        type: string
        description: machine readable error code
      message:
        type: string
        description: human readable error code
      additionalInfo:
        type: object
        description: additional machine readable information about failing entities
  ErrorList:
    type: array
    items:
      $ref: '#/definitions/ErrorListObject'
  ErrorListObject:
    type: object
    properties:
      code:
        type: number
        example: 400
      entity:
        type: string
        example: planet
      entityId:
        type:
          - string
          - object
        example: pluto
      entityIndex:
        type: integer
        example: 1
      reason:
        type: string
        example: "Planet pluto was not found (did you mean dwarf planet pluto?)"
      catalogCode:
        type: string
      subentityPath:
        type: array
        items:
          type:
            - string
            - number
        example: ["categories", 0]
      validationErrors:
        type: array
        items:
          $ref: '#/definitions/ValidationErrorResult'
  BatchError:
    type: object
    properties:
      entityIndex:
        type: number
      entity:
        type: string
      entityId:
        type: string
      code:
        type: number
      reason:
        type: string
      subentityPath:
        type: array
        items:
          type: [ "string", "null", "number" ]
  BatchErrors:
    type: object
    properties:
      errors:
        type: array
        items:
          $ref: '#/definitions/BatchError'
  NotFoundError:
    type: object
    required:
      - message
      - code
    properties:
      statusCode:
        type: number
      code:
        type: string
        example: NotFound
      message:
        type: string
        example: Merchant not found
  ValidationError:
    type: object
    properties:
      statusCode:
        type: number
      message:
        type: string
      code:
        type: string
      additionalInfo:
        type: object
        properties:
          validationErrors:
            type: array
            items:
              type: object
              properties:
                code:
                  type: number
                reason:
                  type: string
                entity:
                  type: string
                entityId:
                  type: string
                subentityPath:
                  type: array
                  items:
                    type: [string, number]
      error:
        type: object
        required:
          - message
        properties:
          paramName:
            type: string
            description: 'the parameter-field, that failed to validate, like "userId"'
          paramValue:
            type:
              - "null"
              - string
              - number
              - array
              - object
            description: 'the value, that was sent, like "xxx"'
          code:
            type: string
            description: machine readable error code
            enum:
              - SCHEMA_VALIDATION_FAILED
              - VALIDATION_FAILED
              - ENUM_MISMATCH
              - MAXIMUM
              - MAXIMUM_EXCLUSIVE
              - MINIMUM
              - MINIMUM_EXCLUSIVE
              - MULTIPLE_OF
              - ARRAY_LENGTH_LONG
              - ARRAY_LENGTH_SHORT
              - ARRAY_ADDITIONAL_ITEMS
              - ARRAY_UNIQUE
              - MAX_LENGTH
              - MIN_LENGTH
              - MAX_PROPERTIES
              - MIN_PROPERTIES
              - OBJECT_MISSING_REQUIRED_PROPERTY
              - OBJECT_PROPERTIES_MAXIMUM
              - OBJECT_PROPERTIES_MINIMUM
              - OBJECT_ADDITIONAL_PROPERTIES
              - OBJECT_DEPENDENCY_KEY
              - ONE_OF_MISSING
              - ONE_OF_MULTIPLE
              - NOT_PASSED
              - INVALID_FORMAT
              - INVALID_TYPE
              - UNKNOWN_FORMAT
              - PATTERN
          message:
            type: string
            description: human readable error code
          results:
            type: object
            properties:
              errors:
                type: array
                items:
                  $ref: '#/definitions/ValidationErrorResult'
              warnings:
                type: array
  ValidationErrorResult:
    type: object
    properties:
      code:
        type: string
        description: machine readable error code
        enum:
          - ENUM_MISMATCH
          - MAXIMUM
          - MAXIMUM_EXCLUSIVE
          - MINIMUM
          - MINIMUM_EXCLUSIVE
          - MULTIPLE_OF
          - ARRAY_LENGTH_LONG
          - ARRAY_LENGTH_SHORT
          - ARRAY_ADDITIONAL_ITEMS
          - ARRAY_UNIQUE
          - MAX_LENGTH
          - MIN_LENGTH
          - MAX_PROPERTIES
          - MIN_PROPERTIES
          - OBJECT_MISSING_REQUIRED_PROPERTY
          - OBJECT_PROPERTIES_MAXIMUM
          - OBJECT_PROPERTIES_MINIMUM
          - OBJECT_ADDITIONAL_PROPERTIES
          - OBJECT_DEPENDENCY_KEY
          - ONE_OF_MISSING
          - ONE_OF_MULTIPLE
          - NOT_PASSED
          - INVALID_FORMAT
          - INVALID_CREDENTIALS
          - INVALID_TYPE
          - UNKNOWN_FORMAT
          - PATTERN
      message:
        type: string
        description: human readable error code
      description:
        type: string
        example: human readable error code
      path:
        type: array
        items:
          type: string
    example:
      code: MAX_LENGTH
      message: "Name too long"
      description: "Property Name is too long"
      path: [ "name" ]
  CurrencyCode:
    type: string
    enum:
      - AED
      - AFN
      - ALL
      - AMD
      - ANG
      - AOA
      - ARS
      - AUD
      - AWG
      - AZN
      - BAM
      - BBD
      - BDT
      - BGN
      - BHD
      - BIF
      - BMD
      - BND
      - BOB
      - BOV
      - BRL
      - BSD
      - BTN
      - BWP
      - BYN
      - BZD
      - CAD
      - CDF
      - CHE
      - CHF
      - CHW
      - CLF
      - CLP
      - CNY
      - COP
      - COU
      - CRC
      - CUC
      - CUP
      - CVE
      - CZK
      - DJF
      - DKK
      - DOP
      - DZD
      - EGP
      - ERN
      - ETB
      - EUR
      - FJD
      - FKP
      - GBP
      - GEL
      - GHS
      - GIP
      - GMD
      - GNF
      - GTQ
      - GYD
      - HKD
      - HNL
      - HRK
      - HTG
      - HUF
      - IDR
      - ILS
      - INR
      - IQD
      - IRR
      - ISK
      - JMD
      - JOD
      - JPY
      - KES
      - KGS
      - KHR
      - KMF
      - KPW
      - KRW
      - KWD
      - KYD
      - KZT
      - LAK
      - LBP
      - LKR
      - LRD
      - LSL
      - LYD
      - MAD
      - MDL
      - MGA
      - MKD
      - MMK
      - MNT
      - MOP
      - MRU
      - MUR
      - MVR
      - MWK
      - MXN
      - MXV
      - MYR
      - MZN
      - NAD
      - NGN
      - NIO
      - NOK
      - NPR
      - NZD
      - OMR
      - PAB
      - PEN
      - PGK
      - PHP
      - PKR
      - PLN
      - PYG
      - QAR
      - RON
      - RSD
      - RUB
      - RWF
      - SAR
      - SBD
      - SCR
      - SDG
      - SEK
      - SGD
      - SHP
      - SLL
      - SOS
      - SRD
      - SSP
      - STN
      - SVC
      - SYP
      - SZL
      - THB
      - TJS
      - TMT
      - TND
      - TOP
      - TRY
      - TTD
      - TWD
      - TZS
      - UAH
      - UGX
      - USD
      - USN
      - UYI
      - UYU
      - UYW
      - UZS
      - VES
      - VND
      - VUV
      - WST
      - XAF
      - XAG
      - XAU
      - XBA
      - XBB
      - XBC
      - XBD
      - XCD
      - XDR
      - XOF
      - XPD
      - XPF
      - XPT
      - XSU
      - XTS
      - XUA
      - XXX
      - YER
      - ZAR
      - ZMW
      - ZWL
    example: USD

  # SyncWebhook
  SyncWebhookCreate:
    type: object
    additionalProperties: false
    required:
      - code
      - endpoint
      - status
      - events
      - name
    properties:
      code:
        type: string
        maxLength: 255
        example: getProductsSync
      name:
        type: string
        maxLength: 255
      endpoint:
        type: string
        maxLength: 255
      status:
        $ref: '#/definitions/SyncWebhookStatus'
      events:
        type: array
        items:
          $ref: '#/definitions/Event'
  SyncWebhookUpdate:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        maxLength: 255
      endpoint:
        type: string
        maxLength: 255
      status:
        $ref: '#/definitions/SyncWebhookStatus'
      events:
        type: array
        items:
          $ref: '#/definitions/Event'
  SyncWebhookFull:
    type: object
    properties:
      name:
        type: string
        maxLength: 255
      endpoint:
        type: string
        maxLength: 255
      status:
        $ref: '#/definitions/Status'
      events:
        type: array
        items:
          $ref: '#/definitions/Event'
      code:
        type: string
        description: Human readable code of the entity
        example: 'someCode'
        maxLength: 255
  Event:
    type: object
    additionalProperties: false
    required:
      - code
    properties:
      code:
        type: string
  SyncWebhookCodes:
    type: array
    items:
      type: string
      example: getProductsSync
  SyncWebhookStatus:
    type: string
    example: "active"
    default: "active"
    enum:
      - active
      - inactive

